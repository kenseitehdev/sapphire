
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftNOTleftLESSTHANGREATERTHANLESSTHANEQUALGREATERTHANEQUALNOTEQUALEQUALSleftINleftPLUSMINUSleftFLRDIVleftPOWERleftMODleftTIMESDIVIDEleftLPARENRPARENleftLCURLYRCURLYAND ASEQUAL COMMA DIVIDE ELSE EQUALS FLRDIV FOR GREATERTHAN GREATERTHANEQUAL IF IN INTEGER LBRACKET LCURLY LESSTHAN LESSTHANEQUAL LPAREN MINUS MOD NOT NOTEQUAL OR PLUS POWER PRINT RBRACKET RCURLY REAL RPAREN SEMICOLON STRING TIMES VARIABLE WHILEprogram : block block : LCURLY statement statement_tail RCURLY\n             | emptyblock : VARIABLE LPAREN expression RPAREN blockstatement_tail : statement statement_tailstatement_tail : emptystatement : PRINT LPAREN VARIABLE RPAREN SEMICOLON statement : PRINT LPAREN STRING RPAREN SEMICOLON statement : PRINT LPAREN expression RPAREN SEMICOLON statement : IF LPAREN expression RPAREN block emptystatement : IF LPAREN expression RPAREN block ELSE blockstatement : WHILE LPAREN expression RPAREN blockstatement : FOR LPAREN expression RPAREN blockstatement : VARIABLE LBRACKET expression RBRACKET ASEQUAL expression SEMICOLONstatement : VARIABLE ASEQUAL expression SEMICOLON\n                 | VARIABLE ASEQUAL list_index SEMICOLONstatement : VARIABLE ASEQUAL list SEMICOLONstatement : listexpression : expression POWER expression\n                  | expression FLRDIV expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression PLUS expression\n                  | expression MINUS expression\n                  | expression MOD expression\n                  | expression GREATERTHANEQUAL expression\n                  | expression LESSTHANEQUAL expression\n                  | expression GREATERTHAN expression\n                  | expression LESSTHAN expression\n                  | expression AND expression\n                  | expression OR expression\n                  | expression NOTEQUAL expression\n                  | expression EQUALS expression\n                  | expression IN list\n                  | NOT expressionexpression : LPAREN expression RPARENlist : LBRACKET list_elements future_list_elements RBRACKET\n            | list PLUS listlist_elements : expression\n                     | list\n                     | emptyfuture_list_elements : COMMA expression future_list_elements\n                            | COMMA list future_list_elements\n                            | empty_listexpression : STRINGexpression : REAL\n                  | INTEGER\n                  | STRING LBRACKET INTEGER RBRACKETexpression : list_indexexpression : VARIABLEexpression : VARIABLE LPAREN expression RPARENlist_index : VARIABLE index_taillist_index : list index_tail index_tail : LBRACKET expression RBRACKET index_tail\n                  | emptyempty_list :  empty : '
    
_lr_action_items = {'LCURLY':([0,78,86,87,88,127,],[3,3,3,3,3,3,]),'VARIABLE':([0,3,4,6,12,13,14,15,18,19,20,21,22,23,28,29,39,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,75,77,78,83,84,85,86,87,88,89,112,113,114,115,116,117,118,119,126,127,129,130,],[5,8,-3,8,34,-18,34,8,40,34,34,34,34,34,34,34,-2,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-38,5,-15,-16,-17,5,5,5,-37,-4,-7,-8,-9,34,-57,-12,-13,-10,5,-14,-11,]),'$end':([0,1,2,4,39,78,112,],[-57,0,-1,-3,-2,-57,-4,]),'PRINT':([3,4,6,13,15,39,77,78,83,84,85,86,87,88,89,112,113,114,115,117,118,119,126,127,129,130,],[7,-3,7,-18,7,-2,-38,-57,-15,-16,-17,-57,-57,-57,-37,-4,-7,-8,-9,-57,-12,-13,-10,-57,-14,-11,]),'IF':([3,4,6,13,15,39,77,78,83,84,85,86,87,88,89,112,113,114,115,117,118,119,126,127,129,130,],[9,-3,9,-18,9,-2,-38,-57,-15,-16,-17,-57,-57,-57,-37,-4,-7,-8,-9,-57,-12,-13,-10,-57,-14,-11,]),'WHILE':([3,4,6,13,15,39,77,78,83,84,85,86,87,88,89,112,113,114,115,117,118,119,126,127,129,130,],[10,-3,10,-18,10,-2,-38,-57,-15,-16,-17,-57,-57,-57,-37,-4,-7,-8,-9,-57,-12,-13,-10,-57,-14,-11,]),'FOR':([3,4,6,13,15,39,77,78,83,84,85,86,87,88,89,112,113,114,115,117,118,119,126,127,129,130,],[11,-3,11,-18,11,-2,-38,-57,-15,-16,-17,-57,-57,-57,-37,-4,-7,-8,-9,-57,-12,-13,-10,-57,-14,-11,]),'LBRACKET':([3,4,6,8,12,13,14,15,18,19,20,21,22,23,26,28,29,30,34,35,37,39,40,41,46,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,75,77,78,83,84,85,86,87,88,89,91,112,113,114,115,116,117,118,119,122,126,127,129,130,],[12,-3,12,19,12,-18,12,12,12,12,12,12,12,12,70,12,12,74,70,12,70,-2,70,74,70,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-38,-57,-15,-16,-17,-57,-57,-57,-37,70,-4,-7,-8,-9,12,-57,-12,-13,70,-10,-57,-14,-11,]),'ELSE':([4,39,78,86,112,117,],[-3,-2,-57,-57,-4,127,]),'RCURLY':([4,6,13,15,16,17,38,39,77,78,83,84,85,86,87,88,89,112,113,114,115,117,118,119,126,127,129,130,],[-3,-57,-18,-57,39,-6,-5,-2,-38,-57,-15,-16,-17,-57,-57,-57,-37,-4,-7,-8,-9,-57,-12,-13,-10,-57,-14,-11,]),'LPAREN':([5,7,9,10,11,12,14,18,19,20,21,22,23,28,29,34,40,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,75,116,],[14,18,21,22,23,29,29,29,29,29,29,29,29,29,29,75,75,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'ASEQUAL':([8,82,],[20,116,]),'NOT':([12,14,18,19,20,21,22,23,28,29,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,75,116,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'STRING':([12,14,18,19,20,21,22,23,28,29,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,75,116,],[30,30,41,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'REAL':([12,14,18,19,20,21,22,23,28,29,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,75,116,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'INTEGER':([12,14,18,19,20,21,22,23,28,29,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,74,75,116,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,32,32,]),'COMMA':([12,24,25,26,27,30,31,32,33,34,37,69,71,72,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,122,123,124,128,],[-57,51,-39,-40,-41,-45,-46,-47,-49,-50,-57,-53,-55,-35,-52,-38,-37,51,51,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-36,-57,-48,-51,-54,]),'RBRACKET':([12,24,25,26,27,30,31,32,33,34,37,43,50,52,69,71,72,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,120,121,122,123,124,128,],[-57,-56,-39,-40,-41,-45,-46,-47,-49,-50,-57,82,89,-44,-53,-55,-35,-52,-38,-37,-56,-56,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,122,-36,123,-42,-43,-57,-48,-51,-54,]),'PLUS':([13,25,26,30,31,32,33,34,36,37,40,41,42,43,44,45,46,47,48,49,69,71,72,73,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,122,123,124,125,128,],[35,57,35,-45,-46,-47,-49,-50,57,35,-50,-45,57,57,57,-49,35,57,57,57,-53,-55,57,57,-52,-38,-37,57,35,-19,-20,-21,-22,-23,-24,-25,57,57,57,57,57,57,57,57,35,57,-36,57,-57,-48,-51,57,-54,]),'POWER':([25,26,30,31,32,33,34,36,37,40,41,42,43,44,45,46,47,48,49,69,71,72,73,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,122,123,124,125,128,],[53,-57,-45,-46,-47,-49,-50,53,-57,-50,-45,53,53,53,-49,-57,53,53,53,-53,-55,53,53,-52,-38,-37,53,-57,-19,53,-21,-22,53,53,-25,53,53,53,53,53,53,53,53,-34,53,-36,53,-57,-48,-51,53,-54,]),'FLRDIV':([25,26,30,31,32,33,34,36,37,40,41,42,43,44,45,46,47,48,49,69,71,72,73,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,122,123,124,125,128,],[54,-57,-45,-46,-47,-49,-50,54,-57,-50,-45,54,54,54,-49,-57,54,54,54,-53,-55,54,54,-52,-38,-37,54,-57,-19,-20,-21,-22,54,54,-25,54,54,54,54,54,54,54,54,-34,54,-36,54,-57,-48,-51,54,-54,]),'TIMES':([25,26,30,31,32,33,34,36,37,40,41,42,43,44,45,46,47,48,49,69,71,72,73,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,122,123,124,125,128,],[55,-57,-45,-46,-47,-49,-50,55,-57,-50,-45,55,55,55,-49,-57,55,55,55,-53,-55,55,55,-52,-38,-37,55,-57,55,55,-21,-22,55,55,55,55,55,55,55,55,55,55,55,-34,55,-36,55,-57,-48,-51,55,-54,]),'DIVIDE':([25,26,30,31,32,33,34,36,37,40,41,42,43,44,45,46,47,48,49,69,71,72,73,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,122,123,124,125,128,],[56,-57,-45,-46,-47,-49,-50,56,-57,-50,-45,56,56,56,-49,-57,56,56,56,-53,-55,56,56,-52,-38,-37,56,-57,56,56,-21,-22,56,56,56,56,56,56,56,56,56,56,56,-34,56,-36,56,-57,-48,-51,56,-54,]),'MINUS':([25,26,30,31,32,33,34,36,37,40,41,42,43,44,45,46,47,48,49,69,71,72,73,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,122,123,124,125,128,],[58,-57,-45,-46,-47,-49,-50,58,-57,-50,-45,58,58,58,-49,-57,58,58,58,-53,-55,58,58,-52,-38,-37,58,-57,-19,-20,-21,-22,-23,-24,-25,58,58,58,58,58,58,58,58,-34,58,-36,58,-57,-48,-51,58,-54,]),'MOD':([25,26,30,31,32,33,34,36,37,40,41,42,43,44,45,46,47,48,49,69,71,72,73,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,122,123,124,125,128,],[59,-57,-45,-46,-47,-49,-50,59,-57,-50,-45,59,59,59,-49,-57,59,59,59,-53,-55,59,59,-52,-38,-37,59,-57,59,59,-21,-22,59,59,-25,59,59,59,59,59,59,59,59,-34,59,-36,59,-57,-48,-51,59,-54,]),'GREATERTHANEQUAL':([25,26,30,31,32,33,34,36,37,40,41,42,43,44,45,46,47,48,49,69,71,72,73,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,122,123,124,125,128,],[60,-57,-45,-46,-47,-49,-50,60,-57,-50,-45,60,60,60,-49,-57,60,60,60,-53,-55,60,60,-52,-38,-37,60,-57,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,60,60,-32,-33,-34,60,-36,60,-57,-48,-51,60,-54,]),'LESSTHANEQUAL':([25,26,30,31,32,33,34,36,37,40,41,42,43,44,45,46,47,48,49,69,71,72,73,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,122,123,124,125,128,],[61,-57,-45,-46,-47,-49,-50,61,-57,-50,-45,61,61,61,-49,-57,61,61,61,-53,-55,61,61,-52,-38,-37,61,-57,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,61,61,-32,-33,-34,61,-36,61,-57,-48,-51,61,-54,]),'GREATERTHAN':([25,26,30,31,32,33,34,36,37,40,41,42,43,44,45,46,47,48,49,69,71,72,73,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,122,123,124,125,128,],[62,-57,-45,-46,-47,-49,-50,62,-57,-50,-45,62,62,62,-49,-57,62,62,62,-53,-55,62,62,-52,-38,-37,62,-57,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,62,62,-32,-33,-34,62,-36,62,-57,-48,-51,62,-54,]),'LESSTHAN':([25,26,30,31,32,33,34,36,37,40,41,42,43,44,45,46,47,48,49,69,71,72,73,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,122,123,124,125,128,],[63,-57,-45,-46,-47,-49,-50,63,-57,-50,-45,63,63,63,-49,-57,63,63,63,-53,-55,63,63,-52,-38,-37,63,-57,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,63,63,-32,-33,-34,63,-36,63,-57,-48,-51,63,-54,]),'AND':([25,26,30,31,32,33,34,36,37,40,41,42,43,44,45,46,47,48,49,69,71,72,73,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,122,123,124,125,128,],[64,-57,-45,-46,-47,-49,-50,64,-57,-50,-45,64,64,64,-49,-57,64,64,64,-53,-55,-35,64,-52,-38,-37,64,-57,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,64,-32,-33,-34,64,-36,64,-57,-48,-51,64,-54,]),'OR':([25,26,30,31,32,33,34,36,37,40,41,42,43,44,45,46,47,48,49,69,71,72,73,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,122,123,124,125,128,],[65,-57,-45,-46,-47,-49,-50,65,-57,-50,-45,65,65,65,-49,-57,65,65,65,-53,-55,-35,65,-52,-38,-37,65,-57,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,65,-36,65,-57,-48,-51,65,-54,]),'NOTEQUAL':([25,26,30,31,32,33,34,36,37,40,41,42,43,44,45,46,47,48,49,69,71,72,73,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,122,123,124,125,128,],[66,-57,-45,-46,-47,-49,-50,66,-57,-50,-45,66,66,66,-49,-57,66,66,66,-53,-55,66,66,-52,-38,-37,66,-57,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,66,66,-32,-33,-34,66,-36,66,-57,-48,-51,66,-54,]),'EQUALS':([25,26,30,31,32,33,34,36,37,40,41,42,43,44,45,46,47,48,49,69,71,72,73,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,122,123,124,125,128,],[67,-57,-45,-46,-47,-49,-50,67,-57,-50,-45,67,67,67,-49,-57,67,67,67,-53,-55,67,67,-52,-38,-37,67,-57,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,67,67,-32,-33,-34,67,-36,67,-57,-48,-51,67,-54,]),'IN':([25,26,30,31,32,33,34,36,37,40,41,42,43,44,45,46,47,48,49,69,71,72,73,76,77,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,122,123,124,125,128,],[68,-57,-45,-46,-47,-49,-50,68,-57,-50,-45,68,68,68,-49,-57,68,68,68,-53,-55,68,68,-52,-38,-37,68,-57,-19,-20,-21,-22,-23,-24,-25,68,68,68,68,68,68,68,68,-34,68,-36,68,-57,-48,-51,68,-54,]),'RPAREN':([30,31,32,33,34,36,37,40,41,42,47,48,49,69,71,72,73,76,77,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,122,123,124,128,],[-45,-46,-47,-49,-50,78,-57,79,80,81,86,87,88,-53,-55,-35,109,-52,-38,-37,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-36,124,-57,-48,-51,-54,]),'SEMICOLON':([30,31,32,33,34,37,44,45,46,69,71,72,76,77,79,80,81,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,122,123,124,125,128,],[-45,-46,-47,-49,-50,-57,83,84,85,-53,-55,-35,-52,-38,113,114,115,-37,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-36,-57,-48,-51,129,-54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,78,86,87,88,127,],[2,112,117,118,119,130,]),'empty':([0,6,12,15,26,34,37,40,46,78,86,87,88,91,117,122,127,],[4,17,27,17,71,71,71,71,71,4,4,4,4,71,126,71,4,]),'statement':([3,6,15,],[6,15,15,]),'list':([3,6,12,14,15,18,19,20,21,22,23,28,29,35,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,75,116,],[13,13,26,37,13,37,37,46,37,37,37,37,37,77,91,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,107,37,37,37,]),'statement_tail':([6,15,],[16,38,]),'list_elements':([12,],[24,]),'expression':([12,14,18,19,20,21,22,23,28,29,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,75,116,],[25,36,42,43,44,47,48,49,72,73,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,111,125,]),'list_index':([12,14,18,19,20,21,22,23,28,29,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,75,116,],[33,33,33,33,45,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'future_list_elements':([24,90,91,],[50,120,121,]),'empty_list':([24,90,91,],[52,52,52,]),'index_tail':([26,34,37,40,46,91,122,],[69,76,69,76,69,69,128,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block','program',1,'p_run_program','main.py',460),
  ('block -> LCURLY statement statement_tail RCURLY','block',4,'p_block_def','main.py',464),
  ('block -> empty','block',1,'p_block_def','main.py',465),
  ('block -> VARIABLE LPAREN expression RPAREN block','block',5,'p_function_def','main.py',474),
  ('statement_tail -> statement statement_tail','statement_tail',2,'p_block_statement_tail','main.py',479),
  ('statement_tail -> empty','statement_tail',1,'p_block_statement_tail_e','main.py',489),
  ('statement -> PRINT LPAREN VARIABLE RPAREN SEMICOLON','statement',5,'p_block_print_variable','main.py',493),
  ('statement -> PRINT LPAREN STRING RPAREN SEMICOLON','statement',5,'p_block_print_string','main.py',497),
  ('statement -> PRINT LPAREN expression RPAREN SEMICOLON','statement',5,'p_block_print_expr','main.py',501),
  ('statement -> IF LPAREN expression RPAREN block empty','statement',6,'p_block_if','main.py',505),
  ('statement -> IF LPAREN expression RPAREN block ELSE block','statement',7,'p_block_if_else','main.py',509),
  ('statement -> WHILE LPAREN expression RPAREN block','statement',5,'p_statement_while','main.py',513),
  ('statement -> FOR LPAREN expression RPAREN block','statement',5,'p_statement_for','main.py',517),
  ('statement -> VARIABLE LBRACKET expression RBRACKET ASEQUAL expression SEMICOLON','statement',7,'p_statement_assign_array','main.py',521),
  ('statement -> VARIABLE ASEQUAL expression SEMICOLON','statement',4,'p_statement_assign','main.py',526),
  ('statement -> VARIABLE ASEQUAL list_index SEMICOLON','statement',4,'p_statement_assign','main.py',527),
  ('statement -> VARIABLE ASEQUAL list SEMICOLON','statement',4,'p_statement_assign_list','main.py',536),
  ('statement -> list','statement',1,'p_statement_expr','main.py',542),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','main.py',550),
  ('expression -> expression FLRDIV expression','expression',3,'p_expression_binop','main.py',551),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','main.py',552),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','main.py',553),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','main.py',554),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','main.py',555),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','main.py',556),
  ('expression -> expression GREATERTHANEQUAL expression','expression',3,'p_expression_binop','main.py',557),
  ('expression -> expression LESSTHANEQUAL expression','expression',3,'p_expression_binop','main.py',558),
  ('expression -> expression GREATERTHAN expression','expression',3,'p_expression_binop','main.py',559),
  ('expression -> expression LESSTHAN expression','expression',3,'p_expression_binop','main.py',560),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','main.py',561),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','main.py',562),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_binop','main.py',563),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop','main.py',564),
  ('expression -> expression IN list','expression',3,'p_expression_binop','main.py',565),
  ('expression -> NOT expression','expression',2,'p_expression_binop','main.py',566),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','main.py',576),
  ('list -> LBRACKET list_elements future_list_elements RBRACKET','list',4,'p_list_builder','main.py',580),
  ('list -> list PLUS list','list',3,'p_list_builder','main.py',581),
  ('list_elements -> expression','list_elements',1,'p_list_elements','main.py',592),
  ('list_elements -> list','list_elements',1,'p_list_elements','main.py',593),
  ('list_elements -> empty','list_elements',1,'p_list_elements','main.py',594),
  ('future_list_elements -> COMMA expression future_list_elements','future_list_elements',3,'p_list_future_elements','main.py',601),
  ('future_list_elements -> COMMA list future_list_elements','future_list_elements',3,'p_list_future_elements','main.py',602),
  ('future_list_elements -> empty_list','future_list_elements',1,'p_list_future_elements','main.py',603),
  ('expression -> STRING','expression',1,'p_expression_string','main.py',612),
  ('expression -> REAL','expression',1,'p_expression_number','main.py',616),
  ('expression -> INTEGER','expression',1,'p_expression_number','main.py',617),
  ('expression -> STRING LBRACKET INTEGER RBRACKET','expression',4,'p_expression_number','main.py',618),
  ('expression -> list_index','expression',1,'p_expression_list_index','main.py',630),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','main.py',634),
  ('expression -> VARIABLE LPAREN expression RPAREN','expression',4,'p_expression_function','main.py',641),
  ('list_index -> VARIABLE index_tail','list_index',2,'p_list_index','main.py',648),
  ('list_index -> list index_tail','list_index',2,'p_list_index_1','main.py',657),
  ('index_tail -> LBRACKET expression RBRACKET index_tail','index_tail',4,'p_index_tail','main.py',665),
  ('index_tail -> empty','index_tail',1,'p_index_tail','main.py',666),
  ('empty_list -> <empty>','empty_list',0,'p_empty_list','main.py',683),
  ('empty -> <empty>','empty',0,'p_empty','main.py',687),
]
