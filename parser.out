Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> block
Rule 2     block -> LCURLY statement statement_tail RCURLY
Rule 3     block -> empty
Rule 4     block -> VARIABLE LPAREN expression RPAREN block
Rule 5     statement_tail -> statement statement_tail
Rule 6     statement_tail -> empty
Rule 7     statement -> PRINT LPAREN VARIABLE RPAREN SEMICOLON
Rule 8     statement -> PRINT LPAREN STRING RPAREN SEMICOLON
Rule 9     statement -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 10    statement -> IF LPAREN expression RPAREN block empty
Rule 11    statement -> IF LPAREN expression RPAREN block ELSE block
Rule 12    statement -> WHILE LPAREN expression RPAREN block
Rule 13    statement -> FOR LPAREN expression RPAREN block
Rule 14    statement -> VARIABLE LBRACKET expression RBRACKET ASEQUAL expression SEMICOLON
Rule 15    statement -> VARIABLE ASEQUAL expression SEMICOLON
Rule 16    statement -> VARIABLE ASEQUAL list_index SEMICOLON
Rule 17    statement -> VARIABLE ASEQUAL list SEMICOLON
Rule 18    statement -> list
Rule 19    expression -> expression POWER expression
Rule 20    expression -> expression FLRDIV expression
Rule 21    expression -> expression TIMES expression
Rule 22    expression -> expression DIVIDE expression
Rule 23    expression -> expression PLUS expression
Rule 24    expression -> expression MINUS expression
Rule 25    expression -> expression MOD expression
Rule 26    expression -> expression GREATERTHANEQUAL expression
Rule 27    expression -> expression LESSTHANEQUAL expression
Rule 28    expression -> expression GREATERTHAN expression
Rule 29    expression -> expression LESSTHAN expression
Rule 30    expression -> expression AND expression
Rule 31    expression -> expression OR expression
Rule 32    expression -> expression NOTEQUAL expression
Rule 33    expression -> expression EQUALS expression
Rule 34    expression -> expression IN list
Rule 35    expression -> NOT expression
Rule 36    expression -> LPAREN expression RPAREN
Rule 37    list -> LBRACKET list_elements future_list_elements RBRACKET
Rule 38    list -> list PLUS list
Rule 39    list_elements -> expression
Rule 40    list_elements -> list
Rule 41    list_elements -> empty
Rule 42    future_list_elements -> COMMA expression future_list_elements
Rule 43    future_list_elements -> COMMA list future_list_elements
Rule 44    future_list_elements -> empty_list
Rule 45    expression -> STRING
Rule 46    expression -> REAL
Rule 47    expression -> INTEGER
Rule 48    expression -> STRING LBRACKET INTEGER RBRACKET
Rule 49    expression -> list_index
Rule 50    expression -> VARIABLE
Rule 51    expression -> VARIABLE LPAREN expression RPAREN
Rule 52    list_index -> VARIABLE index_tail
Rule 53    list_index -> list index_tail
Rule 54    index_tail -> LBRACKET expression RBRACKET index_tail
Rule 55    index_tail -> empty
Rule 56    empty_list -> <empty>
Rule 57    empty -> <empty>

Terminals, with rules where they appear

AND                  : 30
ASEQUAL              : 14 15 16 17
COMMA                : 42 43
DIVIDE               : 22
ELSE                 : 11
EQUALS               : 33
FLRDIV               : 20
FOR                  : 13
GREATERTHAN          : 28
GREATERTHANEQUAL     : 26
IF                   : 10 11
IN                   : 34
INTEGER              : 47 48
LBRACKET             : 14 37 48 54
LCURLY               : 2
LESSTHAN             : 29
LESSTHANEQUAL        : 27
LPAREN               : 4 7 8 9 10 11 12 13 36 51
MINUS                : 24
MOD                  : 25
NOT                  : 35
NOTEQUAL             : 32
OR                   : 31
PLUS                 : 23 38
POWER                : 19
PRINT                : 7 8 9
RBRACKET             : 14 37 48 54
RCURLY               : 2
REAL                 : 46
RPAREN               : 4 7 8 9 10 11 12 13 36 51
SEMICOLON            : 7 8 9 14 15 16 17
STRING               : 8 45 48
TIMES                : 21
VARIABLE             : 4 7 14 15 16 17 50 51 52
WHILE                : 12
error                : 

Nonterminals, with rules where they appear

block                : 1 4 10 11 11 12 13
empty                : 3 6 10 41 55
empty_list           : 44
expression           : 4 9 10 11 12 13 14 14 15 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 35 36 39 42 51 54
future_list_elements : 37 42 43
index_tail           : 52 53 54
list                 : 17 18 34 38 38 40 43 53
list_elements        : 37
list_index           : 16 49
program              : 0
statement            : 2 5
statement_tail       : 2 5

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block
    (2) block -> . LCURLY statement statement_tail RCURLY
    (3) block -> . empty
    (4) block -> . VARIABLE LPAREN expression RPAREN block
    (57) empty -> .

    LCURLY          shift and go to state 3
    VARIABLE        shift and go to state 5
    $end            reduce using rule 57 (empty -> .)

    program                        shift and go to state 1
    block                          shift and go to state 2
    empty                          shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> block .

    $end            reduce using rule 1 (program -> block .)


state 3

    (2) block -> LCURLY . statement statement_tail RCURLY
    (7) statement -> . PRINT LPAREN VARIABLE RPAREN SEMICOLON
    (8) statement -> . PRINT LPAREN STRING RPAREN SEMICOLON
    (9) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (10) statement -> . IF LPAREN expression RPAREN block empty
    (11) statement -> . IF LPAREN expression RPAREN block ELSE block
    (12) statement -> . WHILE LPAREN expression RPAREN block
    (13) statement -> . FOR LPAREN expression RPAREN block
    (14) statement -> . VARIABLE LBRACKET expression RBRACKET ASEQUAL expression SEMICOLON
    (15) statement -> . VARIABLE ASEQUAL expression SEMICOLON
    (16) statement -> . VARIABLE ASEQUAL list_index SEMICOLON
    (17) statement -> . VARIABLE ASEQUAL list SEMICOLON
    (18) statement -> . list
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    PRINT           shift and go to state 7
    IF              shift and go to state 9
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    VARIABLE        shift and go to state 8
    LBRACKET        shift and go to state 12

    statement                      shift and go to state 6
    list                           shift and go to state 13

state 4

    (3) block -> empty .

    $end            reduce using rule 3 (block -> empty .)
    ELSE            reduce using rule 3 (block -> empty .)
    PRINT           reduce using rule 3 (block -> empty .)
    IF              reduce using rule 3 (block -> empty .)
    WHILE           reduce using rule 3 (block -> empty .)
    FOR             reduce using rule 3 (block -> empty .)
    VARIABLE        reduce using rule 3 (block -> empty .)
    LBRACKET        reduce using rule 3 (block -> empty .)
    RCURLY          reduce using rule 3 (block -> empty .)


state 5

    (4) block -> VARIABLE . LPAREN expression RPAREN block

    LPAREN          shift and go to state 14


state 6

    (2) block -> LCURLY statement . statement_tail RCURLY
    (5) statement_tail -> . statement statement_tail
    (6) statement_tail -> . empty
    (7) statement -> . PRINT LPAREN VARIABLE RPAREN SEMICOLON
    (8) statement -> . PRINT LPAREN STRING RPAREN SEMICOLON
    (9) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (10) statement -> . IF LPAREN expression RPAREN block empty
    (11) statement -> . IF LPAREN expression RPAREN block ELSE block
    (12) statement -> . WHILE LPAREN expression RPAREN block
    (13) statement -> . FOR LPAREN expression RPAREN block
    (14) statement -> . VARIABLE LBRACKET expression RBRACKET ASEQUAL expression SEMICOLON
    (15) statement -> . VARIABLE ASEQUAL expression SEMICOLON
    (16) statement -> . VARIABLE ASEQUAL list_index SEMICOLON
    (17) statement -> . VARIABLE ASEQUAL list SEMICOLON
    (18) statement -> . list
    (57) empty -> .
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    PRINT           shift and go to state 7
    IF              shift and go to state 9
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    VARIABLE        shift and go to state 8
    RCURLY          reduce using rule 57 (empty -> .)
    LBRACKET        shift and go to state 12

    statement                      shift and go to state 15
    statement_tail                 shift and go to state 16
    empty                          shift and go to state 17
    list                           shift and go to state 13

state 7

    (7) statement -> PRINT . LPAREN VARIABLE RPAREN SEMICOLON
    (8) statement -> PRINT . LPAREN STRING RPAREN SEMICOLON
    (9) statement -> PRINT . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 18


state 8

    (14) statement -> VARIABLE . LBRACKET expression RBRACKET ASEQUAL expression SEMICOLON
    (15) statement -> VARIABLE . ASEQUAL expression SEMICOLON
    (16) statement -> VARIABLE . ASEQUAL list_index SEMICOLON
    (17) statement -> VARIABLE . ASEQUAL list SEMICOLON

    LBRACKET        shift and go to state 19
    ASEQUAL         shift and go to state 20


state 9

    (10) statement -> IF . LPAREN expression RPAREN block empty
    (11) statement -> IF . LPAREN expression RPAREN block ELSE block

    LPAREN          shift and go to state 21


state 10

    (12) statement -> WHILE . LPAREN expression RPAREN block

    LPAREN          shift and go to state 22


state 11

    (13) statement -> FOR . LPAREN expression RPAREN block

    LPAREN          shift and go to state 23


state 12

    (37) list -> LBRACKET . list_elements future_list_elements RBRACKET
    (39) list_elements -> . expression
    (40) list_elements -> . list
    (41) list_elements -> . empty
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list
    (57) empty -> .
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12
    COMMA           reduce using rule 57 (empty -> .)
    RBRACKET        reduce using rule 57 (empty -> .)

    list_elements                  shift and go to state 24
    expression                     shift and go to state 25
    list                           shift and go to state 26
    empty                          shift and go to state 27
    list_index                     shift and go to state 33

state 13

    (18) statement -> list .
    (38) list -> list . PLUS list

    PRINT           reduce using rule 18 (statement -> list .)
    IF              reduce using rule 18 (statement -> list .)
    WHILE           reduce using rule 18 (statement -> list .)
    FOR             reduce using rule 18 (statement -> list .)
    VARIABLE        reduce using rule 18 (statement -> list .)
    LBRACKET        reduce using rule 18 (statement -> list .)
    RCURLY          reduce using rule 18 (statement -> list .)
    PLUS            shift and go to state 35


state 14

    (4) block -> VARIABLE LPAREN . expression RPAREN block
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 36
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 15

    (5) statement_tail -> statement . statement_tail
    (5) statement_tail -> . statement statement_tail
    (6) statement_tail -> . empty
    (7) statement -> . PRINT LPAREN VARIABLE RPAREN SEMICOLON
    (8) statement -> . PRINT LPAREN STRING RPAREN SEMICOLON
    (9) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (10) statement -> . IF LPAREN expression RPAREN block empty
    (11) statement -> . IF LPAREN expression RPAREN block ELSE block
    (12) statement -> . WHILE LPAREN expression RPAREN block
    (13) statement -> . FOR LPAREN expression RPAREN block
    (14) statement -> . VARIABLE LBRACKET expression RBRACKET ASEQUAL expression SEMICOLON
    (15) statement -> . VARIABLE ASEQUAL expression SEMICOLON
    (16) statement -> . VARIABLE ASEQUAL list_index SEMICOLON
    (17) statement -> . VARIABLE ASEQUAL list SEMICOLON
    (18) statement -> . list
    (57) empty -> .
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    PRINT           shift and go to state 7
    IF              shift and go to state 9
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    VARIABLE        shift and go to state 8
    RCURLY          reduce using rule 57 (empty -> .)
    LBRACKET        shift and go to state 12

    statement                      shift and go to state 15
    statement_tail                 shift and go to state 38
    empty                          shift and go to state 17
    list                           shift and go to state 13

state 16

    (2) block -> LCURLY statement statement_tail . RCURLY

    RCURLY          shift and go to state 39


state 17

    (6) statement_tail -> empty .

    RCURLY          reduce using rule 6 (statement_tail -> empty .)


state 18

    (7) statement -> PRINT LPAREN . VARIABLE RPAREN SEMICOLON
    (8) statement -> PRINT LPAREN . STRING RPAREN SEMICOLON
    (9) statement -> PRINT LPAREN . expression RPAREN SEMICOLON
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    VARIABLE        shift and go to state 40
    STRING          shift and go to state 41
    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 42
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 19

    (14) statement -> VARIABLE LBRACKET . expression RBRACKET ASEQUAL expression SEMICOLON
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 43
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 20

    (15) statement -> VARIABLE ASEQUAL . expression SEMICOLON
    (16) statement -> VARIABLE ASEQUAL . list_index SEMICOLON
    (17) statement -> VARIABLE ASEQUAL . list SEMICOLON
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 44
    list_index                     shift and go to state 45
    list                           shift and go to state 46

state 21

    (10) statement -> IF LPAREN . expression RPAREN block empty
    (11) statement -> IF LPAREN . expression RPAREN block ELSE block
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 47
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 22

    (12) statement -> WHILE LPAREN . expression RPAREN block
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 48
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 23

    (13) statement -> FOR LPAREN . expression RPAREN block
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 49
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 24

    (37) list -> LBRACKET list_elements . future_list_elements RBRACKET
    (42) future_list_elements -> . COMMA expression future_list_elements
    (43) future_list_elements -> . COMMA list future_list_elements
    (44) future_list_elements -> . empty_list
    (56) empty_list -> .

    COMMA           shift and go to state 51
    RBRACKET        reduce using rule 56 (empty_list -> .)

    future_list_elements           shift and go to state 50
    empty_list                     shift and go to state 52

state 25

    (39) list_elements -> expression .
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    COMMA           reduce using rule 39 (list_elements -> expression .)
    RBRACKET        reduce using rule 39 (list_elements -> expression .)
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    GREATERTHANEQUAL shift and go to state 60
    LESSTHANEQUAL   shift and go to state 61
    GREATERTHAN     shift and go to state 62
    LESSTHAN        shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    NOTEQUAL        shift and go to state 66
    EQUALS          shift and go to state 67
    IN              shift and go to state 68


state 26

    (40) list_elements -> list .
    (38) list -> list . PLUS list
    (53) list_index -> list . index_tail
    (54) index_tail -> . LBRACKET expression RBRACKET index_tail
    (55) index_tail -> . empty
    (57) empty -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! reduce/reduce conflict for COMMA resolved using rule 40 (list_elements -> list .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 40 (list_elements -> list .)
    COMMA           reduce using rule 40 (list_elements -> list .)
    RBRACKET        reduce using rule 40 (list_elements -> list .)
    PLUS            shift and go to state 35
    LBRACKET        shift and go to state 70
    POWER           reduce using rule 57 (empty -> .)
    FLRDIV          reduce using rule 57 (empty -> .)
    TIMES           reduce using rule 57 (empty -> .)
    DIVIDE          reduce using rule 57 (empty -> .)
    MINUS           reduce using rule 57 (empty -> .)
    MOD             reduce using rule 57 (empty -> .)
    GREATERTHANEQUAL reduce using rule 57 (empty -> .)
    LESSTHANEQUAL   reduce using rule 57 (empty -> .)
    GREATERTHAN     reduce using rule 57 (empty -> .)
    LESSTHAN        reduce using rule 57 (empty -> .)
    AND             reduce using rule 57 (empty -> .)
    OR              reduce using rule 57 (empty -> .)
    NOTEQUAL        reduce using rule 57 (empty -> .)
    EQUALS          reduce using rule 57 (empty -> .)
    IN              reduce using rule 57 (empty -> .)

  ! PLUS            [ reduce using rule 57 (empty -> .) ]
  ! COMMA           [ reduce using rule 57 (empty -> .) ]
  ! RBRACKET        [ reduce using rule 57 (empty -> .) ]

    index_tail                     shift and go to state 69
    empty                          shift and go to state 71

state 27

    (41) list_elements -> empty .

    COMMA           reduce using rule 41 (list_elements -> empty .)
    RBRACKET        reduce using rule 41 (list_elements -> empty .)


state 28

    (35) expression -> NOT . expression
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 72
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 29

    (36) expression -> LPAREN . expression RPAREN
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 73
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 30

    (45) expression -> STRING .
    (48) expression -> STRING . LBRACKET INTEGER RBRACKET

    POWER           reduce using rule 45 (expression -> STRING .)
    FLRDIV          reduce using rule 45 (expression -> STRING .)
    TIMES           reduce using rule 45 (expression -> STRING .)
    DIVIDE          reduce using rule 45 (expression -> STRING .)
    PLUS            reduce using rule 45 (expression -> STRING .)
    MINUS           reduce using rule 45 (expression -> STRING .)
    MOD             reduce using rule 45 (expression -> STRING .)
    GREATERTHANEQUAL reduce using rule 45 (expression -> STRING .)
    LESSTHANEQUAL   reduce using rule 45 (expression -> STRING .)
    GREATERTHAN     reduce using rule 45 (expression -> STRING .)
    LESSTHAN        reduce using rule 45 (expression -> STRING .)
    AND             reduce using rule 45 (expression -> STRING .)
    OR              reduce using rule 45 (expression -> STRING .)
    NOTEQUAL        reduce using rule 45 (expression -> STRING .)
    EQUALS          reduce using rule 45 (expression -> STRING .)
    IN              reduce using rule 45 (expression -> STRING .)
    COMMA           reduce using rule 45 (expression -> STRING .)
    RBRACKET        reduce using rule 45 (expression -> STRING .)
    RPAREN          reduce using rule 45 (expression -> STRING .)
    SEMICOLON       reduce using rule 45 (expression -> STRING .)
    LBRACKET        shift and go to state 74


state 31

    (46) expression -> REAL .

    POWER           reduce using rule 46 (expression -> REAL .)
    FLRDIV          reduce using rule 46 (expression -> REAL .)
    TIMES           reduce using rule 46 (expression -> REAL .)
    DIVIDE          reduce using rule 46 (expression -> REAL .)
    PLUS            reduce using rule 46 (expression -> REAL .)
    MINUS           reduce using rule 46 (expression -> REAL .)
    MOD             reduce using rule 46 (expression -> REAL .)
    GREATERTHANEQUAL reduce using rule 46 (expression -> REAL .)
    LESSTHANEQUAL   reduce using rule 46 (expression -> REAL .)
    GREATERTHAN     reduce using rule 46 (expression -> REAL .)
    LESSTHAN        reduce using rule 46 (expression -> REAL .)
    AND             reduce using rule 46 (expression -> REAL .)
    OR              reduce using rule 46 (expression -> REAL .)
    NOTEQUAL        reduce using rule 46 (expression -> REAL .)
    EQUALS          reduce using rule 46 (expression -> REAL .)
    IN              reduce using rule 46 (expression -> REAL .)
    COMMA           reduce using rule 46 (expression -> REAL .)
    RBRACKET        reduce using rule 46 (expression -> REAL .)
    RPAREN          reduce using rule 46 (expression -> REAL .)
    SEMICOLON       reduce using rule 46 (expression -> REAL .)


state 32

    (47) expression -> INTEGER .

    POWER           reduce using rule 47 (expression -> INTEGER .)
    FLRDIV          reduce using rule 47 (expression -> INTEGER .)
    TIMES           reduce using rule 47 (expression -> INTEGER .)
    DIVIDE          reduce using rule 47 (expression -> INTEGER .)
    PLUS            reduce using rule 47 (expression -> INTEGER .)
    MINUS           reduce using rule 47 (expression -> INTEGER .)
    MOD             reduce using rule 47 (expression -> INTEGER .)
    GREATERTHANEQUAL reduce using rule 47 (expression -> INTEGER .)
    LESSTHANEQUAL   reduce using rule 47 (expression -> INTEGER .)
    GREATERTHAN     reduce using rule 47 (expression -> INTEGER .)
    LESSTHAN        reduce using rule 47 (expression -> INTEGER .)
    AND             reduce using rule 47 (expression -> INTEGER .)
    OR              reduce using rule 47 (expression -> INTEGER .)
    NOTEQUAL        reduce using rule 47 (expression -> INTEGER .)
    EQUALS          reduce using rule 47 (expression -> INTEGER .)
    IN              reduce using rule 47 (expression -> INTEGER .)
    COMMA           reduce using rule 47 (expression -> INTEGER .)
    RBRACKET        reduce using rule 47 (expression -> INTEGER .)
    RPAREN          reduce using rule 47 (expression -> INTEGER .)
    SEMICOLON       reduce using rule 47 (expression -> INTEGER .)


state 33

    (49) expression -> list_index .

    POWER           reduce using rule 49 (expression -> list_index .)
    FLRDIV          reduce using rule 49 (expression -> list_index .)
    TIMES           reduce using rule 49 (expression -> list_index .)
    DIVIDE          reduce using rule 49 (expression -> list_index .)
    PLUS            reduce using rule 49 (expression -> list_index .)
    MINUS           reduce using rule 49 (expression -> list_index .)
    MOD             reduce using rule 49 (expression -> list_index .)
    GREATERTHANEQUAL reduce using rule 49 (expression -> list_index .)
    LESSTHANEQUAL   reduce using rule 49 (expression -> list_index .)
    GREATERTHAN     reduce using rule 49 (expression -> list_index .)
    LESSTHAN        reduce using rule 49 (expression -> list_index .)
    AND             reduce using rule 49 (expression -> list_index .)
    OR              reduce using rule 49 (expression -> list_index .)
    NOTEQUAL        reduce using rule 49 (expression -> list_index .)
    EQUALS          reduce using rule 49 (expression -> list_index .)
    IN              reduce using rule 49 (expression -> list_index .)
    COMMA           reduce using rule 49 (expression -> list_index .)
    RBRACKET        reduce using rule 49 (expression -> list_index .)
    RPAREN          reduce using rule 49 (expression -> list_index .)
    SEMICOLON       reduce using rule 49 (expression -> list_index .)


state 34

    (50) expression -> VARIABLE .
    (51) expression -> VARIABLE . LPAREN expression RPAREN
    (52) list_index -> VARIABLE . index_tail
    (54) index_tail -> . LBRACKET expression RBRACKET index_tail
    (55) index_tail -> . empty
    (57) empty -> .

  ! reduce/reduce conflict for POWER resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for FLRDIV resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for TIMES resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for PLUS resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for MINUS resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHANEQUAL resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHANEQUAL resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for EQUALS resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for IN resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 50 (expression -> VARIABLE .)
    POWER           reduce using rule 50 (expression -> VARIABLE .)
    FLRDIV          reduce using rule 50 (expression -> VARIABLE .)
    TIMES           reduce using rule 50 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 50 (expression -> VARIABLE .)
    PLUS            reduce using rule 50 (expression -> VARIABLE .)
    MINUS           reduce using rule 50 (expression -> VARIABLE .)
    MOD             reduce using rule 50 (expression -> VARIABLE .)
    GREATERTHANEQUAL reduce using rule 50 (expression -> VARIABLE .)
    LESSTHANEQUAL   reduce using rule 50 (expression -> VARIABLE .)
    GREATERTHAN     reduce using rule 50 (expression -> VARIABLE .)
    LESSTHAN        reduce using rule 50 (expression -> VARIABLE .)
    AND             reduce using rule 50 (expression -> VARIABLE .)
    OR              reduce using rule 50 (expression -> VARIABLE .)
    NOTEQUAL        reduce using rule 50 (expression -> VARIABLE .)
    EQUALS          reduce using rule 50 (expression -> VARIABLE .)
    IN              reduce using rule 50 (expression -> VARIABLE .)
    COMMA           reduce using rule 50 (expression -> VARIABLE .)
    RBRACKET        reduce using rule 50 (expression -> VARIABLE .)
    RPAREN          reduce using rule 50 (expression -> VARIABLE .)
    SEMICOLON       reduce using rule 50 (expression -> VARIABLE .)
    LPAREN          shift and go to state 75
    LBRACKET        shift and go to state 70

  ! POWER           [ reduce using rule 57 (empty -> .) ]
  ! FLRDIV          [ reduce using rule 57 (empty -> .) ]
  ! TIMES           [ reduce using rule 57 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 57 (empty -> .) ]
  ! PLUS            [ reduce using rule 57 (empty -> .) ]
  ! MINUS           [ reduce using rule 57 (empty -> .) ]
  ! MOD             [ reduce using rule 57 (empty -> .) ]
  ! GREATERTHANEQUAL [ reduce using rule 57 (empty -> .) ]
  ! LESSTHANEQUAL   [ reduce using rule 57 (empty -> .) ]
  ! GREATERTHAN     [ reduce using rule 57 (empty -> .) ]
  ! LESSTHAN        [ reduce using rule 57 (empty -> .) ]
  ! AND             [ reduce using rule 57 (empty -> .) ]
  ! OR              [ reduce using rule 57 (empty -> .) ]
  ! NOTEQUAL        [ reduce using rule 57 (empty -> .) ]
  ! EQUALS          [ reduce using rule 57 (empty -> .) ]
  ! IN              [ reduce using rule 57 (empty -> .) ]
  ! COMMA           [ reduce using rule 57 (empty -> .) ]
  ! RBRACKET        [ reduce using rule 57 (empty -> .) ]
  ! RPAREN          [ reduce using rule 57 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 57 (empty -> .) ]

    index_tail                     shift and go to state 76
    empty                          shift and go to state 71

state 35

    (38) list -> list PLUS . list
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    LBRACKET        shift and go to state 12

    list                           shift and go to state 77

state 36

    (4) block -> VARIABLE LPAREN expression . RPAREN block
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    RPAREN          shift and go to state 78
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    GREATERTHANEQUAL shift and go to state 60
    LESSTHANEQUAL   shift and go to state 61
    GREATERTHAN     shift and go to state 62
    LESSTHAN        shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    NOTEQUAL        shift and go to state 66
    EQUALS          shift and go to state 67
    IN              shift and go to state 68


state 37

    (53) list_index -> list . index_tail
    (38) list -> list . PLUS list
    (54) index_tail -> . LBRACKET expression RBRACKET index_tail
    (55) index_tail -> . empty
    (57) empty -> .

  ! shift/reduce conflict for PLUS resolved as shift
    PLUS            shift and go to state 35
    LBRACKET        shift and go to state 70
    RPAREN          reduce using rule 57 (empty -> .)
    POWER           reduce using rule 57 (empty -> .)
    FLRDIV          reduce using rule 57 (empty -> .)
    TIMES           reduce using rule 57 (empty -> .)
    DIVIDE          reduce using rule 57 (empty -> .)
    MINUS           reduce using rule 57 (empty -> .)
    MOD             reduce using rule 57 (empty -> .)
    GREATERTHANEQUAL reduce using rule 57 (empty -> .)
    LESSTHANEQUAL   reduce using rule 57 (empty -> .)
    GREATERTHAN     reduce using rule 57 (empty -> .)
    LESSTHAN        reduce using rule 57 (empty -> .)
    AND             reduce using rule 57 (empty -> .)
    OR              reduce using rule 57 (empty -> .)
    NOTEQUAL        reduce using rule 57 (empty -> .)
    EQUALS          reduce using rule 57 (empty -> .)
    IN              reduce using rule 57 (empty -> .)
    RBRACKET        reduce using rule 57 (empty -> .)
    COMMA           reduce using rule 57 (empty -> .)
    SEMICOLON       reduce using rule 57 (empty -> .)

  ! PLUS            [ reduce using rule 57 (empty -> .) ]

    index_tail                     shift and go to state 69
    empty                          shift and go to state 71

state 38

    (5) statement_tail -> statement statement_tail .

    RCURLY          reduce using rule 5 (statement_tail -> statement statement_tail .)


state 39

    (2) block -> LCURLY statement statement_tail RCURLY .

    $end            reduce using rule 2 (block -> LCURLY statement statement_tail RCURLY .)
    ELSE            reduce using rule 2 (block -> LCURLY statement statement_tail RCURLY .)
    PRINT           reduce using rule 2 (block -> LCURLY statement statement_tail RCURLY .)
    IF              reduce using rule 2 (block -> LCURLY statement statement_tail RCURLY .)
    WHILE           reduce using rule 2 (block -> LCURLY statement statement_tail RCURLY .)
    FOR             reduce using rule 2 (block -> LCURLY statement statement_tail RCURLY .)
    VARIABLE        reduce using rule 2 (block -> LCURLY statement statement_tail RCURLY .)
    LBRACKET        reduce using rule 2 (block -> LCURLY statement statement_tail RCURLY .)
    RCURLY          reduce using rule 2 (block -> LCURLY statement statement_tail RCURLY .)


state 40

    (7) statement -> PRINT LPAREN VARIABLE . RPAREN SEMICOLON
    (50) expression -> VARIABLE .
    (51) expression -> VARIABLE . LPAREN expression RPAREN
    (52) list_index -> VARIABLE . index_tail
    (54) index_tail -> . LBRACKET expression RBRACKET index_tail
    (55) index_tail -> . empty
    (57) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
  ! reduce/reduce conflict for POWER resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for FLRDIV resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for TIMES resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for PLUS resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for MINUS resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHANEQUAL resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHANEQUAL resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for EQUALS resolved using rule 50 (expression -> VARIABLE .)
  ! reduce/reduce conflict for IN resolved using rule 50 (expression -> VARIABLE .)
    RPAREN          shift and go to state 79
    POWER           reduce using rule 50 (expression -> VARIABLE .)
    FLRDIV          reduce using rule 50 (expression -> VARIABLE .)
    TIMES           reduce using rule 50 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 50 (expression -> VARIABLE .)
    PLUS            reduce using rule 50 (expression -> VARIABLE .)
    MINUS           reduce using rule 50 (expression -> VARIABLE .)
    MOD             reduce using rule 50 (expression -> VARIABLE .)
    GREATERTHANEQUAL reduce using rule 50 (expression -> VARIABLE .)
    LESSTHANEQUAL   reduce using rule 50 (expression -> VARIABLE .)
    GREATERTHAN     reduce using rule 50 (expression -> VARIABLE .)
    LESSTHAN        reduce using rule 50 (expression -> VARIABLE .)
    AND             reduce using rule 50 (expression -> VARIABLE .)
    OR              reduce using rule 50 (expression -> VARIABLE .)
    NOTEQUAL        reduce using rule 50 (expression -> VARIABLE .)
    EQUALS          reduce using rule 50 (expression -> VARIABLE .)
    IN              reduce using rule 50 (expression -> VARIABLE .)
    LPAREN          shift and go to state 75
    LBRACKET        shift and go to state 70

  ! RPAREN          [ reduce using rule 50 (expression -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 57 (empty -> .) ]
  ! POWER           [ reduce using rule 57 (empty -> .) ]
  ! FLRDIV          [ reduce using rule 57 (empty -> .) ]
  ! TIMES           [ reduce using rule 57 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 57 (empty -> .) ]
  ! PLUS            [ reduce using rule 57 (empty -> .) ]
  ! MINUS           [ reduce using rule 57 (empty -> .) ]
  ! MOD             [ reduce using rule 57 (empty -> .) ]
  ! GREATERTHANEQUAL [ reduce using rule 57 (empty -> .) ]
  ! LESSTHANEQUAL   [ reduce using rule 57 (empty -> .) ]
  ! GREATERTHAN     [ reduce using rule 57 (empty -> .) ]
  ! LESSTHAN        [ reduce using rule 57 (empty -> .) ]
  ! AND             [ reduce using rule 57 (empty -> .) ]
  ! OR              [ reduce using rule 57 (empty -> .) ]
  ! NOTEQUAL        [ reduce using rule 57 (empty -> .) ]
  ! EQUALS          [ reduce using rule 57 (empty -> .) ]
  ! IN              [ reduce using rule 57 (empty -> .) ]

    index_tail                     shift and go to state 76
    empty                          shift and go to state 71

state 41

    (8) statement -> PRINT LPAREN STRING . RPAREN SEMICOLON
    (45) expression -> STRING .
    (48) expression -> STRING . LBRACKET INTEGER RBRACKET

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 80
    POWER           reduce using rule 45 (expression -> STRING .)
    FLRDIV          reduce using rule 45 (expression -> STRING .)
    TIMES           reduce using rule 45 (expression -> STRING .)
    DIVIDE          reduce using rule 45 (expression -> STRING .)
    PLUS            reduce using rule 45 (expression -> STRING .)
    MINUS           reduce using rule 45 (expression -> STRING .)
    MOD             reduce using rule 45 (expression -> STRING .)
    GREATERTHANEQUAL reduce using rule 45 (expression -> STRING .)
    LESSTHANEQUAL   reduce using rule 45 (expression -> STRING .)
    GREATERTHAN     reduce using rule 45 (expression -> STRING .)
    LESSTHAN        reduce using rule 45 (expression -> STRING .)
    AND             reduce using rule 45 (expression -> STRING .)
    OR              reduce using rule 45 (expression -> STRING .)
    NOTEQUAL        reduce using rule 45 (expression -> STRING .)
    EQUALS          reduce using rule 45 (expression -> STRING .)
    IN              reduce using rule 45 (expression -> STRING .)
    LBRACKET        shift and go to state 74

  ! RPAREN          [ reduce using rule 45 (expression -> STRING .) ]


state 42

    (9) statement -> PRINT LPAREN expression . RPAREN SEMICOLON
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    RPAREN          shift and go to state 81
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    GREATERTHANEQUAL shift and go to state 60
    LESSTHANEQUAL   shift and go to state 61
    GREATERTHAN     shift and go to state 62
    LESSTHAN        shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    NOTEQUAL        shift and go to state 66
    EQUALS          shift and go to state 67
    IN              shift and go to state 68


state 43

    (14) statement -> VARIABLE LBRACKET expression . RBRACKET ASEQUAL expression SEMICOLON
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    RBRACKET        shift and go to state 82
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    GREATERTHANEQUAL shift and go to state 60
    LESSTHANEQUAL   shift and go to state 61
    GREATERTHAN     shift and go to state 62
    LESSTHAN        shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    NOTEQUAL        shift and go to state 66
    EQUALS          shift and go to state 67
    IN              shift and go to state 68


state 44

    (15) statement -> VARIABLE ASEQUAL expression . SEMICOLON
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    SEMICOLON       shift and go to state 83
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    GREATERTHANEQUAL shift and go to state 60
    LESSTHANEQUAL   shift and go to state 61
    GREATERTHAN     shift and go to state 62
    LESSTHAN        shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    NOTEQUAL        shift and go to state 66
    EQUALS          shift and go to state 67
    IN              shift and go to state 68


state 45

    (16) statement -> VARIABLE ASEQUAL list_index . SEMICOLON
    (49) expression -> list_index .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 84
    POWER           reduce using rule 49 (expression -> list_index .)
    FLRDIV          reduce using rule 49 (expression -> list_index .)
    TIMES           reduce using rule 49 (expression -> list_index .)
    DIVIDE          reduce using rule 49 (expression -> list_index .)
    PLUS            reduce using rule 49 (expression -> list_index .)
    MINUS           reduce using rule 49 (expression -> list_index .)
    MOD             reduce using rule 49 (expression -> list_index .)
    GREATERTHANEQUAL reduce using rule 49 (expression -> list_index .)
    LESSTHANEQUAL   reduce using rule 49 (expression -> list_index .)
    GREATERTHAN     reduce using rule 49 (expression -> list_index .)
    LESSTHAN        reduce using rule 49 (expression -> list_index .)
    AND             reduce using rule 49 (expression -> list_index .)
    OR              reduce using rule 49 (expression -> list_index .)
    NOTEQUAL        reduce using rule 49 (expression -> list_index .)
    EQUALS          reduce using rule 49 (expression -> list_index .)
    IN              reduce using rule 49 (expression -> list_index .)

  ! SEMICOLON       [ reduce using rule 49 (expression -> list_index .) ]


state 46

    (17) statement -> VARIABLE ASEQUAL list . SEMICOLON
    (53) list_index -> list . index_tail
    (38) list -> list . PLUS list
    (54) index_tail -> . LBRACKET expression RBRACKET index_tail
    (55) index_tail -> . empty
    (57) empty -> .

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    SEMICOLON       shift and go to state 85
    PLUS            shift and go to state 35
    LBRACKET        shift and go to state 70
    POWER           reduce using rule 57 (empty -> .)
    FLRDIV          reduce using rule 57 (empty -> .)
    TIMES           reduce using rule 57 (empty -> .)
    DIVIDE          reduce using rule 57 (empty -> .)
    MINUS           reduce using rule 57 (empty -> .)
    MOD             reduce using rule 57 (empty -> .)
    GREATERTHANEQUAL reduce using rule 57 (empty -> .)
    LESSTHANEQUAL   reduce using rule 57 (empty -> .)
    GREATERTHAN     reduce using rule 57 (empty -> .)
    LESSTHAN        reduce using rule 57 (empty -> .)
    AND             reduce using rule 57 (empty -> .)
    OR              reduce using rule 57 (empty -> .)
    NOTEQUAL        reduce using rule 57 (empty -> .)
    EQUALS          reduce using rule 57 (empty -> .)
    IN              reduce using rule 57 (empty -> .)

  ! SEMICOLON       [ reduce using rule 57 (empty -> .) ]
  ! PLUS            [ reduce using rule 57 (empty -> .) ]

    index_tail                     shift and go to state 69
    empty                          shift and go to state 71

state 47

    (10) statement -> IF LPAREN expression . RPAREN block empty
    (11) statement -> IF LPAREN expression . RPAREN block ELSE block
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    RPAREN          shift and go to state 86
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    GREATERTHANEQUAL shift and go to state 60
    LESSTHANEQUAL   shift and go to state 61
    GREATERTHAN     shift and go to state 62
    LESSTHAN        shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    NOTEQUAL        shift and go to state 66
    EQUALS          shift and go to state 67
    IN              shift and go to state 68


state 48

    (12) statement -> WHILE LPAREN expression . RPAREN block
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    RPAREN          shift and go to state 87
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    GREATERTHANEQUAL shift and go to state 60
    LESSTHANEQUAL   shift and go to state 61
    GREATERTHAN     shift and go to state 62
    LESSTHAN        shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    NOTEQUAL        shift and go to state 66
    EQUALS          shift and go to state 67
    IN              shift and go to state 68


state 49

    (13) statement -> FOR LPAREN expression . RPAREN block
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    RPAREN          shift and go to state 88
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    GREATERTHANEQUAL shift and go to state 60
    LESSTHANEQUAL   shift and go to state 61
    GREATERTHAN     shift and go to state 62
    LESSTHAN        shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    NOTEQUAL        shift and go to state 66
    EQUALS          shift and go to state 67
    IN              shift and go to state 68


state 50

    (37) list -> LBRACKET list_elements future_list_elements . RBRACKET

    RBRACKET        shift and go to state 89


state 51

    (42) future_list_elements -> COMMA . expression future_list_elements
    (43) future_list_elements -> COMMA . list future_list_elements
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 90
    list                           shift and go to state 91
    list_index                     shift and go to state 33

state 52

    (44) future_list_elements -> empty_list .

    RBRACKET        reduce using rule 44 (future_list_elements -> empty_list .)


state 53

    (19) expression -> expression POWER . expression
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 92
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 54

    (20) expression -> expression FLRDIV . expression
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 93
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 55

    (21) expression -> expression TIMES . expression
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 94
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 56

    (22) expression -> expression DIVIDE . expression
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 95
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 57

    (23) expression -> expression PLUS . expression
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 96
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 58

    (24) expression -> expression MINUS . expression
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 97
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 59

    (25) expression -> expression MOD . expression
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 98
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 60

    (26) expression -> expression GREATERTHANEQUAL . expression
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 99
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 61

    (27) expression -> expression LESSTHANEQUAL . expression
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 100
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 62

    (28) expression -> expression GREATERTHAN . expression
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 101
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 63

    (29) expression -> expression LESSTHAN . expression
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 102
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 64

    (30) expression -> expression AND . expression
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 103
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 65

    (31) expression -> expression OR . expression
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 104
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 66

    (32) expression -> expression NOTEQUAL . expression
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 105
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 67

    (33) expression -> expression EQUALS . expression
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 106
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 68

    (34) expression -> expression IN . list
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    LBRACKET        shift and go to state 12

    list                           shift and go to state 107

state 69

    (53) list_index -> list index_tail .

    POWER           reduce using rule 53 (list_index -> list index_tail .)
    FLRDIV          reduce using rule 53 (list_index -> list index_tail .)
    TIMES           reduce using rule 53 (list_index -> list index_tail .)
    DIVIDE          reduce using rule 53 (list_index -> list index_tail .)
    PLUS            reduce using rule 53 (list_index -> list index_tail .)
    MINUS           reduce using rule 53 (list_index -> list index_tail .)
    MOD             reduce using rule 53 (list_index -> list index_tail .)
    GREATERTHANEQUAL reduce using rule 53 (list_index -> list index_tail .)
    LESSTHANEQUAL   reduce using rule 53 (list_index -> list index_tail .)
    GREATERTHAN     reduce using rule 53 (list_index -> list index_tail .)
    LESSTHAN        reduce using rule 53 (list_index -> list index_tail .)
    AND             reduce using rule 53 (list_index -> list index_tail .)
    OR              reduce using rule 53 (list_index -> list index_tail .)
    NOTEQUAL        reduce using rule 53 (list_index -> list index_tail .)
    EQUALS          reduce using rule 53 (list_index -> list index_tail .)
    IN              reduce using rule 53 (list_index -> list index_tail .)
    COMMA           reduce using rule 53 (list_index -> list index_tail .)
    RBRACKET        reduce using rule 53 (list_index -> list index_tail .)
    RPAREN          reduce using rule 53 (list_index -> list index_tail .)
    SEMICOLON       reduce using rule 53 (list_index -> list index_tail .)


state 70

    (54) index_tail -> LBRACKET . expression RBRACKET index_tail
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 108
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 71

    (55) index_tail -> empty .

    POWER           reduce using rule 55 (index_tail -> empty .)
    FLRDIV          reduce using rule 55 (index_tail -> empty .)
    TIMES           reduce using rule 55 (index_tail -> empty .)
    DIVIDE          reduce using rule 55 (index_tail -> empty .)
    PLUS            reduce using rule 55 (index_tail -> empty .)
    MINUS           reduce using rule 55 (index_tail -> empty .)
    MOD             reduce using rule 55 (index_tail -> empty .)
    GREATERTHANEQUAL reduce using rule 55 (index_tail -> empty .)
    LESSTHANEQUAL   reduce using rule 55 (index_tail -> empty .)
    GREATERTHAN     reduce using rule 55 (index_tail -> empty .)
    LESSTHAN        reduce using rule 55 (index_tail -> empty .)
    AND             reduce using rule 55 (index_tail -> empty .)
    OR              reduce using rule 55 (index_tail -> empty .)
    NOTEQUAL        reduce using rule 55 (index_tail -> empty .)
    EQUALS          reduce using rule 55 (index_tail -> empty .)
    IN              reduce using rule 55 (index_tail -> empty .)
    COMMA           reduce using rule 55 (index_tail -> empty .)
    RBRACKET        reduce using rule 55 (index_tail -> empty .)
    RPAREN          reduce using rule 55 (index_tail -> empty .)
    SEMICOLON       reduce using rule 55 (index_tail -> empty .)


state 72

    (35) expression -> NOT expression .
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    AND             reduce using rule 35 (expression -> NOT expression .)
    OR              reduce using rule 35 (expression -> NOT expression .)
    COMMA           reduce using rule 35 (expression -> NOT expression .)
    RBRACKET        reduce using rule 35 (expression -> NOT expression .)
    RPAREN          reduce using rule 35 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 35 (expression -> NOT expression .)
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    GREATERTHANEQUAL shift and go to state 60
    LESSTHANEQUAL   shift and go to state 61
    GREATERTHAN     shift and go to state 62
    LESSTHAN        shift and go to state 63
    NOTEQUAL        shift and go to state 66
    EQUALS          shift and go to state 67
    IN              shift and go to state 68

  ! POWER           [ reduce using rule 35 (expression -> NOT expression .) ]
  ! FLRDIV          [ reduce using rule 35 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 35 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 35 (expression -> NOT expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 35 (expression -> NOT expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 35 (expression -> NOT expression .) ]
  ! GREATERTHAN     [ reduce using rule 35 (expression -> NOT expression .) ]
  ! LESSTHAN        [ reduce using rule 35 (expression -> NOT expression .) ]
  ! NOTEQUAL        [ reduce using rule 35 (expression -> NOT expression .) ]
  ! EQUALS          [ reduce using rule 35 (expression -> NOT expression .) ]
  ! IN              [ reduce using rule 35 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 73

    (36) expression -> LPAREN expression . RPAREN
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    RPAREN          shift and go to state 109
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    GREATERTHANEQUAL shift and go to state 60
    LESSTHANEQUAL   shift and go to state 61
    GREATERTHAN     shift and go to state 62
    LESSTHAN        shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    NOTEQUAL        shift and go to state 66
    EQUALS          shift and go to state 67
    IN              shift and go to state 68


state 74

    (48) expression -> STRING LBRACKET . INTEGER RBRACKET

    INTEGER         shift and go to state 110


state 75

    (51) expression -> VARIABLE LPAREN . expression RPAREN
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 111
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 76

    (52) list_index -> VARIABLE index_tail .

    POWER           reduce using rule 52 (list_index -> VARIABLE index_tail .)
    FLRDIV          reduce using rule 52 (list_index -> VARIABLE index_tail .)
    TIMES           reduce using rule 52 (list_index -> VARIABLE index_tail .)
    DIVIDE          reduce using rule 52 (list_index -> VARIABLE index_tail .)
    PLUS            reduce using rule 52 (list_index -> VARIABLE index_tail .)
    MINUS           reduce using rule 52 (list_index -> VARIABLE index_tail .)
    MOD             reduce using rule 52 (list_index -> VARIABLE index_tail .)
    GREATERTHANEQUAL reduce using rule 52 (list_index -> VARIABLE index_tail .)
    LESSTHANEQUAL   reduce using rule 52 (list_index -> VARIABLE index_tail .)
    GREATERTHAN     reduce using rule 52 (list_index -> VARIABLE index_tail .)
    LESSTHAN        reduce using rule 52 (list_index -> VARIABLE index_tail .)
    AND             reduce using rule 52 (list_index -> VARIABLE index_tail .)
    OR              reduce using rule 52 (list_index -> VARIABLE index_tail .)
    NOTEQUAL        reduce using rule 52 (list_index -> VARIABLE index_tail .)
    EQUALS          reduce using rule 52 (list_index -> VARIABLE index_tail .)
    IN              reduce using rule 52 (list_index -> VARIABLE index_tail .)
    COMMA           reduce using rule 52 (list_index -> VARIABLE index_tail .)
    RBRACKET        reduce using rule 52 (list_index -> VARIABLE index_tail .)
    RPAREN          reduce using rule 52 (list_index -> VARIABLE index_tail .)
    SEMICOLON       reduce using rule 52 (list_index -> VARIABLE index_tail .)


state 77

    (38) list -> list PLUS list .
    (38) list -> list . PLUS list

    PLUS            reduce using rule 38 (list -> list PLUS list .)
    PRINT           reduce using rule 38 (list -> list PLUS list .)
    IF              reduce using rule 38 (list -> list PLUS list .)
    WHILE           reduce using rule 38 (list -> list PLUS list .)
    FOR             reduce using rule 38 (list -> list PLUS list .)
    VARIABLE        reduce using rule 38 (list -> list PLUS list .)
    LBRACKET        reduce using rule 38 (list -> list PLUS list .)
    RCURLY          reduce using rule 38 (list -> list PLUS list .)
    COMMA           reduce using rule 38 (list -> list PLUS list .)
    RBRACKET        reduce using rule 38 (list -> list PLUS list .)
    POWER           reduce using rule 38 (list -> list PLUS list .)
    FLRDIV          reduce using rule 38 (list -> list PLUS list .)
    TIMES           reduce using rule 38 (list -> list PLUS list .)
    DIVIDE          reduce using rule 38 (list -> list PLUS list .)
    MINUS           reduce using rule 38 (list -> list PLUS list .)
    MOD             reduce using rule 38 (list -> list PLUS list .)
    GREATERTHANEQUAL reduce using rule 38 (list -> list PLUS list .)
    LESSTHANEQUAL   reduce using rule 38 (list -> list PLUS list .)
    GREATERTHAN     reduce using rule 38 (list -> list PLUS list .)
    LESSTHAN        reduce using rule 38 (list -> list PLUS list .)
    AND             reduce using rule 38 (list -> list PLUS list .)
    OR              reduce using rule 38 (list -> list PLUS list .)
    NOTEQUAL        reduce using rule 38 (list -> list PLUS list .)
    EQUALS          reduce using rule 38 (list -> list PLUS list .)
    IN              reduce using rule 38 (list -> list PLUS list .)
    RPAREN          reduce using rule 38 (list -> list PLUS list .)
    SEMICOLON       reduce using rule 38 (list -> list PLUS list .)

  ! PLUS            [ shift and go to state 35 ]


state 78

    (4) block -> VARIABLE LPAREN expression RPAREN . block
    (2) block -> . LCURLY statement statement_tail RCURLY
    (3) block -> . empty
    (4) block -> . VARIABLE LPAREN expression RPAREN block
    (57) empty -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
    LCURLY          shift and go to state 3
    VARIABLE        shift and go to state 5
    $end            reduce using rule 57 (empty -> .)
    ELSE            reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    IF              reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    LBRACKET        reduce using rule 57 (empty -> .)
    RCURLY          reduce using rule 57 (empty -> .)

  ! VARIABLE        [ reduce using rule 57 (empty -> .) ]

    block                          shift and go to state 112
    empty                          shift and go to state 4

state 79

    (7) statement -> PRINT LPAREN VARIABLE RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 113


state 80

    (8) statement -> PRINT LPAREN STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 114


state 81

    (9) statement -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 115


state 82

    (14) statement -> VARIABLE LBRACKET expression RBRACKET . ASEQUAL expression SEMICOLON

    ASEQUAL         shift and go to state 116


state 83

    (15) statement -> VARIABLE ASEQUAL expression SEMICOLON .

    PRINT           reduce using rule 15 (statement -> VARIABLE ASEQUAL expression SEMICOLON .)
    IF              reduce using rule 15 (statement -> VARIABLE ASEQUAL expression SEMICOLON .)
    WHILE           reduce using rule 15 (statement -> VARIABLE ASEQUAL expression SEMICOLON .)
    FOR             reduce using rule 15 (statement -> VARIABLE ASEQUAL expression SEMICOLON .)
    VARIABLE        reduce using rule 15 (statement -> VARIABLE ASEQUAL expression SEMICOLON .)
    LBRACKET        reduce using rule 15 (statement -> VARIABLE ASEQUAL expression SEMICOLON .)
    RCURLY          reduce using rule 15 (statement -> VARIABLE ASEQUAL expression SEMICOLON .)


state 84

    (16) statement -> VARIABLE ASEQUAL list_index SEMICOLON .

    PRINT           reduce using rule 16 (statement -> VARIABLE ASEQUAL list_index SEMICOLON .)
    IF              reduce using rule 16 (statement -> VARIABLE ASEQUAL list_index SEMICOLON .)
    WHILE           reduce using rule 16 (statement -> VARIABLE ASEQUAL list_index SEMICOLON .)
    FOR             reduce using rule 16 (statement -> VARIABLE ASEQUAL list_index SEMICOLON .)
    VARIABLE        reduce using rule 16 (statement -> VARIABLE ASEQUAL list_index SEMICOLON .)
    LBRACKET        reduce using rule 16 (statement -> VARIABLE ASEQUAL list_index SEMICOLON .)
    RCURLY          reduce using rule 16 (statement -> VARIABLE ASEQUAL list_index SEMICOLON .)


state 85

    (17) statement -> VARIABLE ASEQUAL list SEMICOLON .

    PRINT           reduce using rule 17 (statement -> VARIABLE ASEQUAL list SEMICOLON .)
    IF              reduce using rule 17 (statement -> VARIABLE ASEQUAL list SEMICOLON .)
    WHILE           reduce using rule 17 (statement -> VARIABLE ASEQUAL list SEMICOLON .)
    FOR             reduce using rule 17 (statement -> VARIABLE ASEQUAL list SEMICOLON .)
    VARIABLE        reduce using rule 17 (statement -> VARIABLE ASEQUAL list SEMICOLON .)
    LBRACKET        reduce using rule 17 (statement -> VARIABLE ASEQUAL list SEMICOLON .)
    RCURLY          reduce using rule 17 (statement -> VARIABLE ASEQUAL list SEMICOLON .)


state 86

    (10) statement -> IF LPAREN expression RPAREN . block empty
    (11) statement -> IF LPAREN expression RPAREN . block ELSE block
    (2) block -> . LCURLY statement statement_tail RCURLY
    (3) block -> . empty
    (4) block -> . VARIABLE LPAREN expression RPAREN block
    (57) empty -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
    LCURLY          shift and go to state 3
    VARIABLE        shift and go to state 5
    ELSE            reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    IF              reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    LBRACKET        reduce using rule 57 (empty -> .)
    RCURLY          reduce using rule 57 (empty -> .)

  ! VARIABLE        [ reduce using rule 57 (empty -> .) ]

    block                          shift and go to state 117
    empty                          shift and go to state 4

state 87

    (12) statement -> WHILE LPAREN expression RPAREN . block
    (2) block -> . LCURLY statement statement_tail RCURLY
    (3) block -> . empty
    (4) block -> . VARIABLE LPAREN expression RPAREN block
    (57) empty -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
    LCURLY          shift and go to state 3
    VARIABLE        shift and go to state 5
    PRINT           reduce using rule 57 (empty -> .)
    IF              reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    LBRACKET        reduce using rule 57 (empty -> .)
    RCURLY          reduce using rule 57 (empty -> .)

  ! VARIABLE        [ reduce using rule 57 (empty -> .) ]

    block                          shift and go to state 118
    empty                          shift and go to state 4

state 88

    (13) statement -> FOR LPAREN expression RPAREN . block
    (2) block -> . LCURLY statement statement_tail RCURLY
    (3) block -> . empty
    (4) block -> . VARIABLE LPAREN expression RPAREN block
    (57) empty -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
    LCURLY          shift and go to state 3
    VARIABLE        shift and go to state 5
    PRINT           reduce using rule 57 (empty -> .)
    IF              reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    LBRACKET        reduce using rule 57 (empty -> .)
    RCURLY          reduce using rule 57 (empty -> .)

  ! VARIABLE        [ reduce using rule 57 (empty -> .) ]

    block                          shift and go to state 119
    empty                          shift and go to state 4

state 89

    (37) list -> LBRACKET list_elements future_list_elements RBRACKET .

    PLUS            reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    PRINT           reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    IF              reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    WHILE           reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    FOR             reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    VARIABLE        reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    LBRACKET        reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    RCURLY          reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    COMMA           reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    RBRACKET        reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    POWER           reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    FLRDIV          reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    TIMES           reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    DIVIDE          reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    MINUS           reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    MOD             reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    GREATERTHANEQUAL reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    LESSTHANEQUAL   reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    GREATERTHAN     reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    LESSTHAN        reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    AND             reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    OR              reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    NOTEQUAL        reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    EQUALS          reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    IN              reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    RPAREN          reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)
    SEMICOLON       reduce using rule 37 (list -> LBRACKET list_elements future_list_elements RBRACKET .)


state 90

    (42) future_list_elements -> COMMA expression . future_list_elements
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list
    (42) future_list_elements -> . COMMA expression future_list_elements
    (43) future_list_elements -> . COMMA list future_list_elements
    (44) future_list_elements -> . empty_list
    (56) empty_list -> .

    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    GREATERTHANEQUAL shift and go to state 60
    LESSTHANEQUAL   shift and go to state 61
    GREATERTHAN     shift and go to state 62
    LESSTHAN        shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    NOTEQUAL        shift and go to state 66
    EQUALS          shift and go to state 67
    IN              shift and go to state 68
    COMMA           shift and go to state 51
    RBRACKET        reduce using rule 56 (empty_list -> .)

    future_list_elements           shift and go to state 120
    empty_list                     shift and go to state 52

state 91

    (43) future_list_elements -> COMMA list . future_list_elements
    (38) list -> list . PLUS list
    (53) list_index -> list . index_tail
    (42) future_list_elements -> . COMMA expression future_list_elements
    (43) future_list_elements -> . COMMA list future_list_elements
    (44) future_list_elements -> . empty_list
    (54) index_tail -> . LBRACKET expression RBRACKET index_tail
    (55) index_tail -> . empty
    (56) empty_list -> .
    (57) empty -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for RBRACKET resolved using rule 56 (empty_list -> .)
    PLUS            shift and go to state 35
    COMMA           shift and go to state 51
    LBRACKET        shift and go to state 70
    RBRACKET        reduce using rule 56 (empty_list -> .)
    POWER           reduce using rule 57 (empty -> .)
    FLRDIV          reduce using rule 57 (empty -> .)
    TIMES           reduce using rule 57 (empty -> .)
    DIVIDE          reduce using rule 57 (empty -> .)
    MINUS           reduce using rule 57 (empty -> .)
    MOD             reduce using rule 57 (empty -> .)
    GREATERTHANEQUAL reduce using rule 57 (empty -> .)
    LESSTHANEQUAL   reduce using rule 57 (empty -> .)
    GREATERTHAN     reduce using rule 57 (empty -> .)
    LESSTHAN        reduce using rule 57 (empty -> .)
    AND             reduce using rule 57 (empty -> .)
    OR              reduce using rule 57 (empty -> .)
    NOTEQUAL        reduce using rule 57 (empty -> .)
    EQUALS          reduce using rule 57 (empty -> .)
    IN              reduce using rule 57 (empty -> .)

  ! PLUS            [ reduce using rule 57 (empty -> .) ]
  ! COMMA           [ reduce using rule 57 (empty -> .) ]
  ! RBRACKET        [ reduce using rule 57 (empty -> .) ]

    future_list_elements           shift and go to state 121
    index_tail                     shift and go to state 69
    empty_list                     shift and go to state 52
    empty                          shift and go to state 71

state 92

    (19) expression -> expression POWER expression .
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    POWER           reduce using rule 19 (expression -> expression POWER expression .)
    FLRDIV          reduce using rule 19 (expression -> expression POWER expression .)
    PLUS            reduce using rule 19 (expression -> expression POWER expression .)
    MINUS           reduce using rule 19 (expression -> expression POWER expression .)
    GREATERTHANEQUAL reduce using rule 19 (expression -> expression POWER expression .)
    LESSTHANEQUAL   reduce using rule 19 (expression -> expression POWER expression .)
    GREATERTHAN     reduce using rule 19 (expression -> expression POWER expression .)
    LESSTHAN        reduce using rule 19 (expression -> expression POWER expression .)
    AND             reduce using rule 19 (expression -> expression POWER expression .)
    OR              reduce using rule 19 (expression -> expression POWER expression .)
    NOTEQUAL        reduce using rule 19 (expression -> expression POWER expression .)
    EQUALS          reduce using rule 19 (expression -> expression POWER expression .)
    IN              reduce using rule 19 (expression -> expression POWER expression .)
    COMMA           reduce using rule 19 (expression -> expression POWER expression .)
    RBRACKET        reduce using rule 19 (expression -> expression POWER expression .)
    RPAREN          reduce using rule 19 (expression -> expression POWER expression .)
    SEMICOLON       reduce using rule 19 (expression -> expression POWER expression .)
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    MOD             shift and go to state 59

  ! TIMES           [ reduce using rule 19 (expression -> expression POWER expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression POWER expression .) ]
  ! MOD             [ reduce using rule 19 (expression -> expression POWER expression .) ]
  ! POWER           [ shift and go to state 53 ]
  ! FLRDIV          [ shift and go to state 54 ]
  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! GREATERTHANEQUAL [ shift and go to state 60 ]
  ! LESSTHANEQUAL   [ shift and go to state 61 ]
  ! GREATERTHAN     [ shift and go to state 62 ]
  ! LESSTHAN        [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! NOTEQUAL        [ shift and go to state 66 ]
  ! EQUALS          [ shift and go to state 67 ]
  ! IN              [ shift and go to state 68 ]


state 93

    (20) expression -> expression FLRDIV expression .
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    FLRDIV          reduce using rule 20 (expression -> expression FLRDIV expression .)
    PLUS            reduce using rule 20 (expression -> expression FLRDIV expression .)
    MINUS           reduce using rule 20 (expression -> expression FLRDIV expression .)
    GREATERTHANEQUAL reduce using rule 20 (expression -> expression FLRDIV expression .)
    LESSTHANEQUAL   reduce using rule 20 (expression -> expression FLRDIV expression .)
    GREATERTHAN     reduce using rule 20 (expression -> expression FLRDIV expression .)
    LESSTHAN        reduce using rule 20 (expression -> expression FLRDIV expression .)
    AND             reduce using rule 20 (expression -> expression FLRDIV expression .)
    OR              reduce using rule 20 (expression -> expression FLRDIV expression .)
    NOTEQUAL        reduce using rule 20 (expression -> expression FLRDIV expression .)
    EQUALS          reduce using rule 20 (expression -> expression FLRDIV expression .)
    IN              reduce using rule 20 (expression -> expression FLRDIV expression .)
    COMMA           reduce using rule 20 (expression -> expression FLRDIV expression .)
    RBRACKET        reduce using rule 20 (expression -> expression FLRDIV expression .)
    RPAREN          reduce using rule 20 (expression -> expression FLRDIV expression .)
    SEMICOLON       reduce using rule 20 (expression -> expression FLRDIV expression .)
    POWER           shift and go to state 53
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    MOD             shift and go to state 59

  ! POWER           [ reduce using rule 20 (expression -> expression FLRDIV expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression FLRDIV expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression FLRDIV expression .) ]
  ! MOD             [ reduce using rule 20 (expression -> expression FLRDIV expression .) ]
  ! FLRDIV          [ shift and go to state 54 ]
  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! GREATERTHANEQUAL [ shift and go to state 60 ]
  ! LESSTHANEQUAL   [ shift and go to state 61 ]
  ! GREATERTHAN     [ shift and go to state 62 ]
  ! LESSTHAN        [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! NOTEQUAL        [ shift and go to state 66 ]
  ! EQUALS          [ shift and go to state 67 ]
  ! IN              [ shift and go to state 68 ]


state 94

    (21) expression -> expression TIMES expression .
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    POWER           reduce using rule 21 (expression -> expression TIMES expression .)
    FLRDIV          reduce using rule 21 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 21 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 21 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 21 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 21 (expression -> expression TIMES expression .)
    MOD             reduce using rule 21 (expression -> expression TIMES expression .)
    GREATERTHANEQUAL reduce using rule 21 (expression -> expression TIMES expression .)
    LESSTHANEQUAL   reduce using rule 21 (expression -> expression TIMES expression .)
    GREATERTHAN     reduce using rule 21 (expression -> expression TIMES expression .)
    LESSTHAN        reduce using rule 21 (expression -> expression TIMES expression .)
    AND             reduce using rule 21 (expression -> expression TIMES expression .)
    OR              reduce using rule 21 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 21 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 21 (expression -> expression TIMES expression .)
    IN              reduce using rule 21 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 21 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 21 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 21 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 21 (expression -> expression TIMES expression .)

  ! POWER           [ shift and go to state 53 ]
  ! FLRDIV          [ shift and go to state 54 ]
  ! TIMES           [ shift and go to state 55 ]
  ! DIVIDE          [ shift and go to state 56 ]
  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! MOD             [ shift and go to state 59 ]
  ! GREATERTHANEQUAL [ shift and go to state 60 ]
  ! LESSTHANEQUAL   [ shift and go to state 61 ]
  ! GREATERTHAN     [ shift and go to state 62 ]
  ! LESSTHAN        [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! NOTEQUAL        [ shift and go to state 66 ]
  ! EQUALS          [ shift and go to state 67 ]
  ! IN              [ shift and go to state 68 ]


state 95

    (22) expression -> expression DIVIDE expression .
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    POWER           reduce using rule 22 (expression -> expression DIVIDE expression .)
    FLRDIV          reduce using rule 22 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 22 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 22 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 22 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 22 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 22 (expression -> expression DIVIDE expression .)
    GREATERTHANEQUAL reduce using rule 22 (expression -> expression DIVIDE expression .)
    LESSTHANEQUAL   reduce using rule 22 (expression -> expression DIVIDE expression .)
    GREATERTHAN     reduce using rule 22 (expression -> expression DIVIDE expression .)
    LESSTHAN        reduce using rule 22 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 22 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 22 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 22 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 22 (expression -> expression DIVIDE expression .)
    IN              reduce using rule 22 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 22 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 22 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 22 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 22 (expression -> expression DIVIDE expression .)

  ! POWER           [ shift and go to state 53 ]
  ! FLRDIV          [ shift and go to state 54 ]
  ! TIMES           [ shift and go to state 55 ]
  ! DIVIDE          [ shift and go to state 56 ]
  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! MOD             [ shift and go to state 59 ]
  ! GREATERTHANEQUAL [ shift and go to state 60 ]
  ! LESSTHANEQUAL   [ shift and go to state 61 ]
  ! GREATERTHAN     [ shift and go to state 62 ]
  ! LESSTHAN        [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! NOTEQUAL        [ shift and go to state 66 ]
  ! EQUALS          [ shift and go to state 67 ]
  ! IN              [ shift and go to state 68 ]


state 96

    (23) expression -> expression PLUS expression .
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    PLUS            reduce using rule 23 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 23 (expression -> expression PLUS expression .)
    GREATERTHANEQUAL reduce using rule 23 (expression -> expression PLUS expression .)
    LESSTHANEQUAL   reduce using rule 23 (expression -> expression PLUS expression .)
    GREATERTHAN     reduce using rule 23 (expression -> expression PLUS expression .)
    LESSTHAN        reduce using rule 23 (expression -> expression PLUS expression .)
    AND             reduce using rule 23 (expression -> expression PLUS expression .)
    OR              reduce using rule 23 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 23 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 23 (expression -> expression PLUS expression .)
    IN              reduce using rule 23 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 23 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 23 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 23 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 23 (expression -> expression PLUS expression .)
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    MOD             shift and go to state 59

  ! POWER           [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! FLRDIV          [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! GREATERTHANEQUAL [ shift and go to state 60 ]
  ! LESSTHANEQUAL   [ shift and go to state 61 ]
  ! GREATERTHAN     [ shift and go to state 62 ]
  ! LESSTHAN        [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! NOTEQUAL        [ shift and go to state 66 ]
  ! EQUALS          [ shift and go to state 67 ]
  ! IN              [ shift and go to state 68 ]


state 97

    (24) expression -> expression MINUS expression .
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    PLUS            reduce using rule 24 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 24 (expression -> expression MINUS expression .)
    GREATERTHANEQUAL reduce using rule 24 (expression -> expression MINUS expression .)
    LESSTHANEQUAL   reduce using rule 24 (expression -> expression MINUS expression .)
    GREATERTHAN     reduce using rule 24 (expression -> expression MINUS expression .)
    LESSTHAN        reduce using rule 24 (expression -> expression MINUS expression .)
    AND             reduce using rule 24 (expression -> expression MINUS expression .)
    OR              reduce using rule 24 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 24 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 24 (expression -> expression MINUS expression .)
    IN              reduce using rule 24 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 24 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 24 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 24 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 24 (expression -> expression MINUS expression .)
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    MOD             shift and go to state 59

  ! POWER           [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! FLRDIV          [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! GREATERTHANEQUAL [ shift and go to state 60 ]
  ! LESSTHANEQUAL   [ shift and go to state 61 ]
  ! GREATERTHAN     [ shift and go to state 62 ]
  ! LESSTHAN        [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! NOTEQUAL        [ shift and go to state 66 ]
  ! EQUALS          [ shift and go to state 67 ]
  ! IN              [ shift and go to state 68 ]


state 98

    (25) expression -> expression MOD expression .
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    POWER           reduce using rule 25 (expression -> expression MOD expression .)
    FLRDIV          reduce using rule 25 (expression -> expression MOD expression .)
    PLUS            reduce using rule 25 (expression -> expression MOD expression .)
    MINUS           reduce using rule 25 (expression -> expression MOD expression .)
    MOD             reduce using rule 25 (expression -> expression MOD expression .)
    GREATERTHANEQUAL reduce using rule 25 (expression -> expression MOD expression .)
    LESSTHANEQUAL   reduce using rule 25 (expression -> expression MOD expression .)
    GREATERTHAN     reduce using rule 25 (expression -> expression MOD expression .)
    LESSTHAN        reduce using rule 25 (expression -> expression MOD expression .)
    AND             reduce using rule 25 (expression -> expression MOD expression .)
    OR              reduce using rule 25 (expression -> expression MOD expression .)
    NOTEQUAL        reduce using rule 25 (expression -> expression MOD expression .)
    EQUALS          reduce using rule 25 (expression -> expression MOD expression .)
    IN              reduce using rule 25 (expression -> expression MOD expression .)
    COMMA           reduce using rule 25 (expression -> expression MOD expression .)
    RBRACKET        reduce using rule 25 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 25 (expression -> expression MOD expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression MOD expression .)
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56

  ! TIMES           [ reduce using rule 25 (expression -> expression MOD expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression MOD expression .) ]
  ! POWER           [ shift and go to state 53 ]
  ! FLRDIV          [ shift and go to state 54 ]
  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! MOD             [ shift and go to state 59 ]
  ! GREATERTHANEQUAL [ shift and go to state 60 ]
  ! LESSTHANEQUAL   [ shift and go to state 61 ]
  ! GREATERTHAN     [ shift and go to state 62 ]
  ! LESSTHAN        [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! NOTEQUAL        [ shift and go to state 66 ]
  ! EQUALS          [ shift and go to state 67 ]
  ! IN              [ shift and go to state 68 ]


state 99

    (26) expression -> expression GREATERTHANEQUAL expression .
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    GREATERTHANEQUAL reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .)
    LESSTHANEQUAL   reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .)
    GREATERTHAN     reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .)
    LESSTHAN        reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .)
    AND             reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .)
    OR              reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .)
    NOTEQUAL        reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .)
    EQUALS          reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .)
    COMMA           reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .)
    RBRACKET        reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .)
    RPAREN          reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .)
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    IN              shift and go to state 68

  ! POWER           [ reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! FLRDIV          [ reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! PLUS            [ reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! MOD             [ reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! IN              [ reduce using rule 26 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! GREATERTHANEQUAL [ shift and go to state 60 ]
  ! LESSTHANEQUAL   [ shift and go to state 61 ]
  ! GREATERTHAN     [ shift and go to state 62 ]
  ! LESSTHAN        [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! NOTEQUAL        [ shift and go to state 66 ]
  ! EQUALS          [ shift and go to state 67 ]


state 100

    (27) expression -> expression LESSTHANEQUAL expression .
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    GREATERTHANEQUAL reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .)
    LESSTHANEQUAL   reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .)
    GREATERTHAN     reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .)
    LESSTHAN        reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .)
    AND             reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .)
    OR              reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .)
    NOTEQUAL        reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .)
    EQUALS          reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .)
    COMMA           reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .)
    RBRACKET        reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .)
    RPAREN          reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .)
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    IN              shift and go to state 68

  ! POWER           [ reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .) ]
  ! FLRDIV          [ reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .) ]
  ! PLUS            [ reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .) ]
  ! MOD             [ reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .) ]
  ! IN              [ reduce using rule 27 (expression -> expression LESSTHANEQUAL expression .) ]
  ! GREATERTHANEQUAL [ shift and go to state 60 ]
  ! LESSTHANEQUAL   [ shift and go to state 61 ]
  ! GREATERTHAN     [ shift and go to state 62 ]
  ! LESSTHAN        [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! NOTEQUAL        [ shift and go to state 66 ]
  ! EQUALS          [ shift and go to state 67 ]


state 101

    (28) expression -> expression GREATERTHAN expression .
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    GREATERTHANEQUAL reduce using rule 28 (expression -> expression GREATERTHAN expression .)
    LESSTHANEQUAL   reduce using rule 28 (expression -> expression GREATERTHAN expression .)
    GREATERTHAN     reduce using rule 28 (expression -> expression GREATERTHAN expression .)
    LESSTHAN        reduce using rule 28 (expression -> expression GREATERTHAN expression .)
    AND             reduce using rule 28 (expression -> expression GREATERTHAN expression .)
    OR              reduce using rule 28 (expression -> expression GREATERTHAN expression .)
    NOTEQUAL        reduce using rule 28 (expression -> expression GREATERTHAN expression .)
    EQUALS          reduce using rule 28 (expression -> expression GREATERTHAN expression .)
    COMMA           reduce using rule 28 (expression -> expression GREATERTHAN expression .)
    RBRACKET        reduce using rule 28 (expression -> expression GREATERTHAN expression .)
    RPAREN          reduce using rule 28 (expression -> expression GREATERTHAN expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression GREATERTHAN expression .)
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    IN              shift and go to state 68

  ! POWER           [ reduce using rule 28 (expression -> expression GREATERTHAN expression .) ]
  ! FLRDIV          [ reduce using rule 28 (expression -> expression GREATERTHAN expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression GREATERTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression GREATERTHAN expression .) ]
  ! PLUS            [ reduce using rule 28 (expression -> expression GREATERTHAN expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression GREATERTHAN expression .) ]
  ! MOD             [ reduce using rule 28 (expression -> expression GREATERTHAN expression .) ]
  ! IN              [ reduce using rule 28 (expression -> expression GREATERTHAN expression .) ]
  ! GREATERTHANEQUAL [ shift and go to state 60 ]
  ! LESSTHANEQUAL   [ shift and go to state 61 ]
  ! GREATERTHAN     [ shift and go to state 62 ]
  ! LESSTHAN        [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! NOTEQUAL        [ shift and go to state 66 ]
  ! EQUALS          [ shift and go to state 67 ]


state 102

    (29) expression -> expression LESSTHAN expression .
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    GREATERTHANEQUAL reduce using rule 29 (expression -> expression LESSTHAN expression .)
    LESSTHANEQUAL   reduce using rule 29 (expression -> expression LESSTHAN expression .)
    GREATERTHAN     reduce using rule 29 (expression -> expression LESSTHAN expression .)
    LESSTHAN        reduce using rule 29 (expression -> expression LESSTHAN expression .)
    AND             reduce using rule 29 (expression -> expression LESSTHAN expression .)
    OR              reduce using rule 29 (expression -> expression LESSTHAN expression .)
    NOTEQUAL        reduce using rule 29 (expression -> expression LESSTHAN expression .)
    EQUALS          reduce using rule 29 (expression -> expression LESSTHAN expression .)
    COMMA           reduce using rule 29 (expression -> expression LESSTHAN expression .)
    RBRACKET        reduce using rule 29 (expression -> expression LESSTHAN expression .)
    RPAREN          reduce using rule 29 (expression -> expression LESSTHAN expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression LESSTHAN expression .)
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    IN              shift and go to state 68

  ! POWER           [ reduce using rule 29 (expression -> expression LESSTHAN expression .) ]
  ! FLRDIV          [ reduce using rule 29 (expression -> expression LESSTHAN expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression LESSTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression LESSTHAN expression .) ]
  ! PLUS            [ reduce using rule 29 (expression -> expression LESSTHAN expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression LESSTHAN expression .) ]
  ! MOD             [ reduce using rule 29 (expression -> expression LESSTHAN expression .) ]
  ! IN              [ reduce using rule 29 (expression -> expression LESSTHAN expression .) ]
  ! GREATERTHANEQUAL [ shift and go to state 60 ]
  ! LESSTHANEQUAL   [ shift and go to state 61 ]
  ! GREATERTHAN     [ shift and go to state 62 ]
  ! LESSTHAN        [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! NOTEQUAL        [ shift and go to state 66 ]
  ! EQUALS          [ shift and go to state 67 ]


state 103

    (30) expression -> expression AND expression .
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    AND             reduce using rule 30 (expression -> expression AND expression .)
    OR              reduce using rule 30 (expression -> expression AND expression .)
    COMMA           reduce using rule 30 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 30 (expression -> expression AND expression .)
    RPAREN          reduce using rule 30 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression AND expression .)
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    GREATERTHANEQUAL shift and go to state 60
    LESSTHANEQUAL   shift and go to state 61
    GREATERTHAN     shift and go to state 62
    LESSTHAN        shift and go to state 63
    NOTEQUAL        shift and go to state 66
    EQUALS          shift and go to state 67
    IN              shift and go to state 68

  ! POWER           [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! FLRDIV          [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! GREATERTHAN     [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! LESSTHAN        [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! NOTEQUAL        [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! IN              [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 104

    (31) expression -> expression OR expression .
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    OR              reduce using rule 31 (expression -> expression OR expression .)
    COMMA           reduce using rule 31 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 31 (expression -> expression OR expression .)
    RPAREN          reduce using rule 31 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression OR expression .)
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    GREATERTHANEQUAL shift and go to state 60
    LESSTHANEQUAL   shift and go to state 61
    GREATERTHAN     shift and go to state 62
    LESSTHAN        shift and go to state 63
    AND             shift and go to state 64
    NOTEQUAL        shift and go to state 66
    EQUALS          shift and go to state 67
    IN              shift and go to state 68

  ! POWER           [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! FLRDIV          [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! GREATERTHAN     [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! LESSTHAN        [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! NOTEQUAL        [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! IN              [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 65 ]


state 105

    (32) expression -> expression NOTEQUAL expression .
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    GREATERTHANEQUAL reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    LESSTHANEQUAL   reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    GREATERTHAN     reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    LESSTHAN        reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    AND             reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    OR              reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    NOTEQUAL        reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    EQUALS          reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    COMMA           reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    RBRACKET        reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    IN              shift and go to state 68

  ! POWER           [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! FLRDIV          [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! PLUS            [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! MOD             [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! IN              [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! GREATERTHANEQUAL [ shift and go to state 60 ]
  ! LESSTHANEQUAL   [ shift and go to state 61 ]
  ! GREATERTHAN     [ shift and go to state 62 ]
  ! LESSTHAN        [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! NOTEQUAL        [ shift and go to state 66 ]
  ! EQUALS          [ shift and go to state 67 ]


state 106

    (33) expression -> expression EQUALS expression .
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    GREATERTHANEQUAL reduce using rule 33 (expression -> expression EQUALS expression .)
    LESSTHANEQUAL   reduce using rule 33 (expression -> expression EQUALS expression .)
    GREATERTHAN     reduce using rule 33 (expression -> expression EQUALS expression .)
    LESSTHAN        reduce using rule 33 (expression -> expression EQUALS expression .)
    AND             reduce using rule 33 (expression -> expression EQUALS expression .)
    OR              reduce using rule 33 (expression -> expression EQUALS expression .)
    NOTEQUAL        reduce using rule 33 (expression -> expression EQUALS expression .)
    EQUALS          reduce using rule 33 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 33 (expression -> expression EQUALS expression .)
    RBRACKET        reduce using rule 33 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 33 (expression -> expression EQUALS expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression EQUALS expression .)
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    IN              shift and go to state 68

  ! POWER           [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! FLRDIV          [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! PLUS            [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! MOD             [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! IN              [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! GREATERTHANEQUAL [ shift and go to state 60 ]
  ! LESSTHANEQUAL   [ shift and go to state 61 ]
  ! GREATERTHAN     [ shift and go to state 62 ]
  ! LESSTHAN        [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! NOTEQUAL        [ shift and go to state 66 ]
  ! EQUALS          [ shift and go to state 67 ]


state 107

    (34) expression -> expression IN list .
    (38) list -> list . PLUS list

    POWER           reduce using rule 34 (expression -> expression IN list .)
    FLRDIV          reduce using rule 34 (expression -> expression IN list .)
    TIMES           reduce using rule 34 (expression -> expression IN list .)
    DIVIDE          reduce using rule 34 (expression -> expression IN list .)
    MINUS           reduce using rule 34 (expression -> expression IN list .)
    MOD             reduce using rule 34 (expression -> expression IN list .)
    GREATERTHANEQUAL reduce using rule 34 (expression -> expression IN list .)
    LESSTHANEQUAL   reduce using rule 34 (expression -> expression IN list .)
    GREATERTHAN     reduce using rule 34 (expression -> expression IN list .)
    LESSTHAN        reduce using rule 34 (expression -> expression IN list .)
    AND             reduce using rule 34 (expression -> expression IN list .)
    OR              reduce using rule 34 (expression -> expression IN list .)
    NOTEQUAL        reduce using rule 34 (expression -> expression IN list .)
    EQUALS          reduce using rule 34 (expression -> expression IN list .)
    IN              reduce using rule 34 (expression -> expression IN list .)
    COMMA           reduce using rule 34 (expression -> expression IN list .)
    RBRACKET        reduce using rule 34 (expression -> expression IN list .)
    RPAREN          reduce using rule 34 (expression -> expression IN list .)
    SEMICOLON       reduce using rule 34 (expression -> expression IN list .)
    PLUS            shift and go to state 35

  ! PLUS            [ reduce using rule 34 (expression -> expression IN list .) ]


state 108

    (54) index_tail -> LBRACKET expression . RBRACKET index_tail
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    RBRACKET        shift and go to state 122
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    GREATERTHANEQUAL shift and go to state 60
    LESSTHANEQUAL   shift and go to state 61
    GREATERTHAN     shift and go to state 62
    LESSTHAN        shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    NOTEQUAL        shift and go to state 66
    EQUALS          shift and go to state 67
    IN              shift and go to state 68


state 109

    (36) expression -> LPAREN expression RPAREN .

    POWER           reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    FLRDIV          reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    GREATERTHANEQUAL reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    LESSTHANEQUAL   reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 36 (expression -> LPAREN expression RPAREN .)


state 110

    (48) expression -> STRING LBRACKET INTEGER . RBRACKET

    RBRACKET        shift and go to state 123


state 111

    (51) expression -> VARIABLE LPAREN expression . RPAREN
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    RPAREN          shift and go to state 124
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    GREATERTHANEQUAL shift and go to state 60
    LESSTHANEQUAL   shift and go to state 61
    GREATERTHAN     shift and go to state 62
    LESSTHAN        shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    NOTEQUAL        shift and go to state 66
    EQUALS          shift and go to state 67
    IN              shift and go to state 68


state 112

    (4) block -> VARIABLE LPAREN expression RPAREN block .

    $end            reduce using rule 4 (block -> VARIABLE LPAREN expression RPAREN block .)
    ELSE            reduce using rule 4 (block -> VARIABLE LPAREN expression RPAREN block .)
    PRINT           reduce using rule 4 (block -> VARIABLE LPAREN expression RPAREN block .)
    IF              reduce using rule 4 (block -> VARIABLE LPAREN expression RPAREN block .)
    WHILE           reduce using rule 4 (block -> VARIABLE LPAREN expression RPAREN block .)
    FOR             reduce using rule 4 (block -> VARIABLE LPAREN expression RPAREN block .)
    VARIABLE        reduce using rule 4 (block -> VARIABLE LPAREN expression RPAREN block .)
    LBRACKET        reduce using rule 4 (block -> VARIABLE LPAREN expression RPAREN block .)
    RCURLY          reduce using rule 4 (block -> VARIABLE LPAREN expression RPAREN block .)


state 113

    (7) statement -> PRINT LPAREN VARIABLE RPAREN SEMICOLON .

    PRINT           reduce using rule 7 (statement -> PRINT LPAREN VARIABLE RPAREN SEMICOLON .)
    IF              reduce using rule 7 (statement -> PRINT LPAREN VARIABLE RPAREN SEMICOLON .)
    WHILE           reduce using rule 7 (statement -> PRINT LPAREN VARIABLE RPAREN SEMICOLON .)
    FOR             reduce using rule 7 (statement -> PRINT LPAREN VARIABLE RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 7 (statement -> PRINT LPAREN VARIABLE RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 7 (statement -> PRINT LPAREN VARIABLE RPAREN SEMICOLON .)
    RCURLY          reduce using rule 7 (statement -> PRINT LPAREN VARIABLE RPAREN SEMICOLON .)


state 114

    (8) statement -> PRINT LPAREN STRING RPAREN SEMICOLON .

    PRINT           reduce using rule 8 (statement -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    IF              reduce using rule 8 (statement -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 8 (statement -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    FOR             reduce using rule 8 (statement -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 8 (statement -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 8 (statement -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    RCURLY          reduce using rule 8 (statement -> PRINT LPAREN STRING RPAREN SEMICOLON .)


state 115

    (9) statement -> PRINT LPAREN expression RPAREN SEMICOLON .

    PRINT           reduce using rule 9 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 9 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 9 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 9 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 9 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 9 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RCURLY          reduce using rule 9 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 116

    (14) statement -> VARIABLE LBRACKET expression RBRACKET ASEQUAL . expression SEMICOLON
    (19) expression -> . expression POWER expression
    (20) expression -> . expression FLRDIV expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression GREATERTHANEQUAL expression
    (27) expression -> . expression LESSTHANEQUAL expression
    (28) expression -> . expression GREATERTHAN expression
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression IN list
    (35) expression -> . NOT expression
    (36) expression -> . LPAREN expression RPAREN
    (45) expression -> . STRING
    (46) expression -> . REAL
    (47) expression -> . INTEGER
    (48) expression -> . STRING LBRACKET INTEGER RBRACKET
    (49) expression -> . list_index
    (50) expression -> . VARIABLE
    (51) expression -> . VARIABLE LPAREN expression RPAREN
    (52) list_index -> . VARIABLE index_tail
    (53) list_index -> . list index_tail
    (37) list -> . LBRACKET list_elements future_list_elements RBRACKET
    (38) list -> . list PLUS list

    NOT             shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    VARIABLE        shift and go to state 34
    LBRACKET        shift and go to state 12

    expression                     shift and go to state 125
    list                           shift and go to state 37
    list_index                     shift and go to state 33

state 117

    (10) statement -> IF LPAREN expression RPAREN block . empty
    (11) statement -> IF LPAREN expression RPAREN block . ELSE block
    (57) empty -> .

    ELSE            shift and go to state 127
    PRINT           reduce using rule 57 (empty -> .)
    IF              reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    VARIABLE        reduce using rule 57 (empty -> .)
    LBRACKET        reduce using rule 57 (empty -> .)
    RCURLY          reduce using rule 57 (empty -> .)

    empty                          shift and go to state 126

state 118

    (12) statement -> WHILE LPAREN expression RPAREN block .

    PRINT           reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN block .)
    IF              reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN block .)
    WHILE           reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN block .)
    FOR             reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN block .)
    VARIABLE        reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN block .)
    LBRACKET        reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN block .)
    RCURLY          reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN block .)


state 119

    (13) statement -> FOR LPAREN expression RPAREN block .

    PRINT           reduce using rule 13 (statement -> FOR LPAREN expression RPAREN block .)
    IF              reduce using rule 13 (statement -> FOR LPAREN expression RPAREN block .)
    WHILE           reduce using rule 13 (statement -> FOR LPAREN expression RPAREN block .)
    FOR             reduce using rule 13 (statement -> FOR LPAREN expression RPAREN block .)
    VARIABLE        reduce using rule 13 (statement -> FOR LPAREN expression RPAREN block .)
    LBRACKET        reduce using rule 13 (statement -> FOR LPAREN expression RPAREN block .)
    RCURLY          reduce using rule 13 (statement -> FOR LPAREN expression RPAREN block .)


state 120

    (42) future_list_elements -> COMMA expression future_list_elements .

    RBRACKET        reduce using rule 42 (future_list_elements -> COMMA expression future_list_elements .)


state 121

    (43) future_list_elements -> COMMA list future_list_elements .

    RBRACKET        reduce using rule 43 (future_list_elements -> COMMA list future_list_elements .)


state 122

    (54) index_tail -> LBRACKET expression RBRACKET . index_tail
    (54) index_tail -> . LBRACKET expression RBRACKET index_tail
    (55) index_tail -> . empty
    (57) empty -> .

    LBRACKET        shift and go to state 70
    POWER           reduce using rule 57 (empty -> .)
    FLRDIV          reduce using rule 57 (empty -> .)
    TIMES           reduce using rule 57 (empty -> .)
    DIVIDE          reduce using rule 57 (empty -> .)
    PLUS            reduce using rule 57 (empty -> .)
    MINUS           reduce using rule 57 (empty -> .)
    MOD             reduce using rule 57 (empty -> .)
    GREATERTHANEQUAL reduce using rule 57 (empty -> .)
    LESSTHANEQUAL   reduce using rule 57 (empty -> .)
    GREATERTHAN     reduce using rule 57 (empty -> .)
    LESSTHAN        reduce using rule 57 (empty -> .)
    AND             reduce using rule 57 (empty -> .)
    OR              reduce using rule 57 (empty -> .)
    NOTEQUAL        reduce using rule 57 (empty -> .)
    EQUALS          reduce using rule 57 (empty -> .)
    IN              reduce using rule 57 (empty -> .)
    COMMA           reduce using rule 57 (empty -> .)
    RBRACKET        reduce using rule 57 (empty -> .)
    RPAREN          reduce using rule 57 (empty -> .)
    SEMICOLON       reduce using rule 57 (empty -> .)

    index_tail                     shift and go to state 128
    empty                          shift and go to state 71

state 123

    (48) expression -> STRING LBRACKET INTEGER RBRACKET .

    POWER           reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    FLRDIV          reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    TIMES           reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    DIVIDE          reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    PLUS            reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    MINUS           reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    MOD             reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    GREATERTHANEQUAL reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    LESSTHANEQUAL   reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    GREATERTHAN     reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    LESSTHAN        reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    AND             reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    OR              reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    NOTEQUAL        reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    EQUALS          reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    IN              reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    COMMA           reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    RBRACKET        reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    RPAREN          reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)
    SEMICOLON       reduce using rule 48 (expression -> STRING LBRACKET INTEGER RBRACKET .)


state 124

    (51) expression -> VARIABLE LPAREN expression RPAREN .

    POWER           reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    FLRDIV          reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    TIMES           reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    PLUS            reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    MINUS           reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    MOD             reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    GREATERTHANEQUAL reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    LESSTHANEQUAL   reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    AND             reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    OR              reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    EQUALS          reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    IN              reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    COMMA           reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    RPAREN          reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 51 (expression -> VARIABLE LPAREN expression RPAREN .)


state 125

    (14) statement -> VARIABLE LBRACKET expression RBRACKET ASEQUAL expression . SEMICOLON
    (19) expression -> expression . POWER expression
    (20) expression -> expression . FLRDIV expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . GREATERTHANEQUAL expression
    (27) expression -> expression . LESSTHANEQUAL expression
    (28) expression -> expression . GREATERTHAN expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . IN list

    SEMICOLON       shift and go to state 129
    POWER           shift and go to state 53
    FLRDIV          shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    MOD             shift and go to state 59
    GREATERTHANEQUAL shift and go to state 60
    LESSTHANEQUAL   shift and go to state 61
    GREATERTHAN     shift and go to state 62
    LESSTHAN        shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    NOTEQUAL        shift and go to state 66
    EQUALS          shift and go to state 67
    IN              shift and go to state 68


state 126

    (10) statement -> IF LPAREN expression RPAREN block empty .

    PRINT           reduce using rule 10 (statement -> IF LPAREN expression RPAREN block empty .)
    IF              reduce using rule 10 (statement -> IF LPAREN expression RPAREN block empty .)
    WHILE           reduce using rule 10 (statement -> IF LPAREN expression RPAREN block empty .)
    FOR             reduce using rule 10 (statement -> IF LPAREN expression RPAREN block empty .)
    VARIABLE        reduce using rule 10 (statement -> IF LPAREN expression RPAREN block empty .)
    LBRACKET        reduce using rule 10 (statement -> IF LPAREN expression RPAREN block empty .)
    RCURLY          reduce using rule 10 (statement -> IF LPAREN expression RPAREN block empty .)


state 127

    (11) statement -> IF LPAREN expression RPAREN block ELSE . block
    (2) block -> . LCURLY statement statement_tail RCURLY
    (3) block -> . empty
    (4) block -> . VARIABLE LPAREN expression RPAREN block
    (57) empty -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
    LCURLY          shift and go to state 3
    VARIABLE        shift and go to state 5
    PRINT           reduce using rule 57 (empty -> .)
    IF              reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    LBRACKET        reduce using rule 57 (empty -> .)
    RCURLY          reduce using rule 57 (empty -> .)

  ! VARIABLE        [ reduce using rule 57 (empty -> .) ]

    block                          shift and go to state 130
    empty                          shift and go to state 4

state 128

    (54) index_tail -> LBRACKET expression RBRACKET index_tail .

    POWER           reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    FLRDIV          reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    TIMES           reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    DIVIDE          reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    PLUS            reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    MINUS           reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    MOD             reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    GREATERTHANEQUAL reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    LESSTHANEQUAL   reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    GREATERTHAN     reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    LESSTHAN        reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    AND             reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    OR              reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    NOTEQUAL        reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    EQUALS          reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    IN              reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    COMMA           reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    RBRACKET        reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    RPAREN          reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)
    SEMICOLON       reduce using rule 54 (index_tail -> LBRACKET expression RBRACKET index_tail .)


state 129

    (14) statement -> VARIABLE LBRACKET expression RBRACKET ASEQUAL expression SEMICOLON .

    PRINT           reduce using rule 14 (statement -> VARIABLE LBRACKET expression RBRACKET ASEQUAL expression SEMICOLON .)
    IF              reduce using rule 14 (statement -> VARIABLE LBRACKET expression RBRACKET ASEQUAL expression SEMICOLON .)
    WHILE           reduce using rule 14 (statement -> VARIABLE LBRACKET expression RBRACKET ASEQUAL expression SEMICOLON .)
    FOR             reduce using rule 14 (statement -> VARIABLE LBRACKET expression RBRACKET ASEQUAL expression SEMICOLON .)
    VARIABLE        reduce using rule 14 (statement -> VARIABLE LBRACKET expression RBRACKET ASEQUAL expression SEMICOLON .)
    LBRACKET        reduce using rule 14 (statement -> VARIABLE LBRACKET expression RBRACKET ASEQUAL expression SEMICOLON .)
    RCURLY          reduce using rule 14 (statement -> VARIABLE LBRACKET expression RBRACKET ASEQUAL expression SEMICOLON .)


state 130

    (11) statement -> IF LPAREN expression RPAREN block ELSE block .

    PRINT           reduce using rule 11 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    IF              reduce using rule 11 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    WHILE           reduce using rule 11 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    FOR             reduce using rule 11 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    VARIABLE        reduce using rule 11 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    LBRACKET        reduce using rule 11 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    RCURLY          reduce using rule 11 (statement -> IF LPAREN expression RPAREN block ELSE block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 26 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 37 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 40 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 40 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 41 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 45 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 46 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 46 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 78 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 86 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 87 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 91 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 127 resolved as shift
WARNING: reduce/reduce conflict in state 26 resolved using rule (list_elements -> list)
WARNING: rejected rule (empty -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 34 resolved using rule (expression -> VARIABLE)
WARNING: rejected rule (empty -> <empty>) in state 34
WARNING: reduce/reduce conflict in state 40 resolved using rule (expression -> VARIABLE)
WARNING: rejected rule (empty -> <empty>) in state 40
WARNING: reduce/reduce conflict in state 91 resolved using rule (empty_list -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 91
